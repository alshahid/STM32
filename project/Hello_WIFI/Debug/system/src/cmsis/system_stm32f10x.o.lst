   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32f10x.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SetSysClockTo72,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	SetSysClockTo72:
  23              	.LFB66:
  24              		.file 1 "../system/src/cmsis/system_stm32f10x.c"
   1:../system/src/cmsis/system_stm32f10x.c **** /**
   2:../system/src/cmsis/system_stm32f10x.c ****   ******************************************************************************
   3:../system/src/cmsis/system_stm32f10x.c ****   * @file    system_stm32f10x.c
   4:../system/src/cmsis/system_stm32f10x.c ****   * @author  MCD Application Team
   5:../system/src/cmsis/system_stm32f10x.c ****   * @version V3.5.0
   6:../system/src/cmsis/system_stm32f10x.c ****   * @date    11-March-2011
   7:../system/src/cmsis/system_stm32f10x.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   8:../system/src/cmsis/system_stm32f10x.c ****   * 
   9:../system/src/cmsis/system_stm32f10x.c ****   * 1.  This file provides two functions and one global variable to be called from 
  10:../system/src/cmsis/system_stm32f10x.c ****   *     user application:
  11:../system/src/cmsis/system_stm32f10x.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  12:../system/src/cmsis/system_stm32f10x.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  13:../system/src/cmsis/system_stm32f10x.c ****   *                      This function is called at startup just after reset and 
  14:../system/src/cmsis/system_stm32f10x.c ****   *                      before branch to main program. This call is made inside
  15:../system/src/cmsis/system_stm32f10x.c ****   *                      the "startup_stm32f10x_xx.s" file.
  16:../system/src/cmsis/system_stm32f10x.c ****   *
  17:../system/src/cmsis/system_stm32f10x.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  18:../system/src/cmsis/system_stm32f10x.c ****   *                                  by the user application to setup the SysTick 
  19:../system/src/cmsis/system_stm32f10x.c ****   *                                  timer or configure other parameters.
  20:../system/src/cmsis/system_stm32f10x.c ****   *                                     
  21:../system/src/cmsis/system_stm32f10x.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  22:../system/src/cmsis/system_stm32f10x.c ****   *                                 be called whenever the core clock is changed
  23:../system/src/cmsis/system_stm32f10x.c ****   *                                 during program execution.
  24:../system/src/cmsis/system_stm32f10x.c ****   *
  25:../system/src/cmsis/system_stm32f10x.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  26:../system/src/cmsis/system_stm32f10x.c ****   *    Then SystemInit() function is called, in "startup_stm32f10x_xx.s" file, to
  27:../system/src/cmsis/system_stm32f10x.c ****   *    configure the system clock before to branch to main program.
  28:../system/src/cmsis/system_stm32f10x.c ****   *
  29:../system/src/cmsis/system_stm32f10x.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  30:../system/src/cmsis/system_stm32f10x.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  31:../system/src/cmsis/system_stm32f10x.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  32:../system/src/cmsis/system_stm32f10x.c ****   *
  33:../system/src/cmsis/system_stm32f10x.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depedning on
  34:../system/src/cmsis/system_stm32f10x.c ****   *    the product used), refer to "HSE_VALUE" define in "stm32f10x.h" file. 
  35:../system/src/cmsis/system_stm32f10x.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  36:../system/src/cmsis/system_stm32f10x.c ****   *    are using different crystal you have to adapt the HSE value to your own
  37:../system/src/cmsis/system_stm32f10x.c ****   *    configuration.
  38:../system/src/cmsis/system_stm32f10x.c ****   *        
  39:../system/src/cmsis/system_stm32f10x.c ****   ******************************************************************************
  40:../system/src/cmsis/system_stm32f10x.c ****   * @attention
  41:../system/src/cmsis/system_stm32f10x.c ****   *
  42:../system/src/cmsis/system_stm32f10x.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  43:../system/src/cmsis/system_stm32f10x.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  44:../system/src/cmsis/system_stm32f10x.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  45:../system/src/cmsis/system_stm32f10x.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  46:../system/src/cmsis/system_stm32f10x.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  47:../system/src/cmsis/system_stm32f10x.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  48:../system/src/cmsis/system_stm32f10x.c ****   *
  49:../system/src/cmsis/system_stm32f10x.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  50:../system/src/cmsis/system_stm32f10x.c ****   ******************************************************************************
  51:../system/src/cmsis/system_stm32f10x.c ****   */
  52:../system/src/cmsis/system_stm32f10x.c **** 
  53:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup CMSIS
  54:../system/src/cmsis/system_stm32f10x.c ****   * @{
  55:../system/src/cmsis/system_stm32f10x.c ****   */
  56:../system/src/cmsis/system_stm32f10x.c **** 
  57:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup stm32f10x_system
  58:../system/src/cmsis/system_stm32f10x.c ****   * @{
  59:../system/src/cmsis/system_stm32f10x.c ****   */  
  60:../system/src/cmsis/system_stm32f10x.c ****   
  61:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Includes
  62:../system/src/cmsis/system_stm32f10x.c ****   * @{
  63:../system/src/cmsis/system_stm32f10x.c ****   */
  64:../system/src/cmsis/system_stm32f10x.c **** 
  65:../system/src/cmsis/system_stm32f10x.c **** #include "stm32f10x.h"
  66:../system/src/cmsis/system_stm32f10x.c **** 
  67:../system/src/cmsis/system_stm32f10x.c **** /**
  68:../system/src/cmsis/system_stm32f10x.c ****   * @}
  69:../system/src/cmsis/system_stm32f10x.c ****   */
  70:../system/src/cmsis/system_stm32f10x.c **** 
  71:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_TypesDefinitions
  72:../system/src/cmsis/system_stm32f10x.c ****   * @{
  73:../system/src/cmsis/system_stm32f10x.c ****   */
  74:../system/src/cmsis/system_stm32f10x.c **** 
  75:../system/src/cmsis/system_stm32f10x.c **** /**
  76:../system/src/cmsis/system_stm32f10x.c ****   * @}
  77:../system/src/cmsis/system_stm32f10x.c ****   */
  78:../system/src/cmsis/system_stm32f10x.c **** 
  79:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Defines
  80:../system/src/cmsis/system_stm32f10x.c ****   * @{
  81:../system/src/cmsis/system_stm32f10x.c ****   */
  82:../system/src/cmsis/system_stm32f10x.c **** 
  83:../system/src/cmsis/system_stm32f10x.c **** /*!< Uncomment the line corresponding to the desired System clock (SYSCLK)
  84:../system/src/cmsis/system_stm32f10x.c ****    frequency (after reset the HSI is used as SYSCLK source)
  85:../system/src/cmsis/system_stm32f10x.c ****    
  86:../system/src/cmsis/system_stm32f10x.c ****    IMPORTANT NOTE:
  87:../system/src/cmsis/system_stm32f10x.c ****    ============== 
  88:../system/src/cmsis/system_stm32f10x.c ****    1. After each device reset the HSI is used as System clock source.
  89:../system/src/cmsis/system_stm32f10x.c **** 
  90:../system/src/cmsis/system_stm32f10x.c ****    2. Please make sure that the selected System clock doesn't exceed your device's
  91:../system/src/cmsis/system_stm32f10x.c ****       maximum frequency.
  92:../system/src/cmsis/system_stm32f10x.c ****       
  93:../system/src/cmsis/system_stm32f10x.c ****    3. If none of the define below is enabled, the HSI is used as System clock
  94:../system/src/cmsis/system_stm32f10x.c ****     source.
  95:../system/src/cmsis/system_stm32f10x.c **** 
  96:../system/src/cmsis/system_stm32f10x.c ****    4. The System clock configuration functions provided within this file assume that:
  97:../system/src/cmsis/system_stm32f10x.c ****         - For Low, Medium and High density Value line devices an external 8MHz 
  98:../system/src/cmsis/system_stm32f10x.c ****           crystal is used to drive the System clock.
  99:../system/src/cmsis/system_stm32f10x.c ****         - For Low, Medium and High density devices an external 8MHz crystal is
 100:../system/src/cmsis/system_stm32f10x.c ****           used to drive the System clock.
 101:../system/src/cmsis/system_stm32f10x.c ****         - For Connectivity line devices an external 25MHz crystal is used to drive
 102:../system/src/cmsis/system_stm32f10x.c ****           the System clock.
 103:../system/src/cmsis/system_stm32f10x.c ****      If you are using different crystal you have to adapt those functions accordingly.
 104:../system/src/cmsis/system_stm32f10x.c ****     */
 105:../system/src/cmsis/system_stm32f10x.c ****     
 106:../system/src/cmsis/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || (defined STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 107:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 108:../system/src/cmsis/system_stm32f10x.c ****  #define SYSCLK_FREQ_24MHz  24000000
 109:../system/src/cmsis/system_stm32f10x.c **** #else
 110:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_HSE    HSE_VALUE */
 111:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_24MHz  24000000 */ 
 112:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_36MHz  36000000 */
 113:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_48MHz  48000000 */
 114:../system/src/cmsis/system_stm32f10x.c **** /* #define SYSCLK_FREQ_56MHz  56000000 */
 115:../system/src/cmsis/system_stm32f10x.c **** #define SYSCLK_FREQ_72MHz  72000000
 116:../system/src/cmsis/system_stm32f10x.c **** #endif
 117:../system/src/cmsis/system_stm32f10x.c **** 
 118:../system/src/cmsis/system_stm32f10x.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 119:../system/src/cmsis/system_stm32f10x.c ****      on STM3210E-EVAL board (STM32 High density and XL-density devices) or on 
 120:../system/src/cmsis/system_stm32f10x.c ****      STM32100E-EVAL board (STM32 High-density value line devices) as data memory */ 
 121:../system/src/cmsis/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 122:../system/src/cmsis/system_stm32f10x.c **** /* #define DATA_IN_ExtSRAM */
 123:../system/src/cmsis/system_stm32f10x.c **** #endif
 124:../system/src/cmsis/system_stm32f10x.c **** 
 125:../system/src/cmsis/system_stm32f10x.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 126:../system/src/cmsis/system_stm32f10x.c ****      Internal SRAM. */ 
 127:../system/src/cmsis/system_stm32f10x.c **** /* #define VECT_TAB_SRAM */
 128:../system/src/cmsis/system_stm32f10x.c **** #define VECT_TAB_OFFSET  0x0 /*!< Vector Table base offset field. 
 129:../system/src/cmsis/system_stm32f10x.c ****                                   This value must be a multiple of 0x200. */
 130:../system/src/cmsis/system_stm32f10x.c **** 
 131:../system/src/cmsis/system_stm32f10x.c **** 
 132:../system/src/cmsis/system_stm32f10x.c **** /**
 133:../system/src/cmsis/system_stm32f10x.c ****   * @}
 134:../system/src/cmsis/system_stm32f10x.c ****   */
 135:../system/src/cmsis/system_stm32f10x.c **** 
 136:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Macros
 137:../system/src/cmsis/system_stm32f10x.c ****   * @{
 138:../system/src/cmsis/system_stm32f10x.c ****   */
 139:../system/src/cmsis/system_stm32f10x.c **** 
 140:../system/src/cmsis/system_stm32f10x.c **** /**
 141:../system/src/cmsis/system_stm32f10x.c ****   * @}
 142:../system/src/cmsis/system_stm32f10x.c ****   */
 143:../system/src/cmsis/system_stm32f10x.c **** 
 144:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Variables
 145:../system/src/cmsis/system_stm32f10x.c ****   * @{
 146:../system/src/cmsis/system_stm32f10x.c ****   */
 147:../system/src/cmsis/system_stm32f10x.c **** 
 148:../system/src/cmsis/system_stm32f10x.c **** /*******************************************************************************
 149:../system/src/cmsis/system_stm32f10x.c **** *  Clock Definitions
 150:../system/src/cmsis/system_stm32f10x.c **** *******************************************************************************/
 151:../system/src/cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 152:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_HSE;        /*!< System Clock Frequency (Core Cloc
 153:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 154:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_24MHz;        /*!< System Clock Frequency (Core Cl
 155:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 156:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_36MHz;        /*!< System Clock Frequency (Core Cl
 157:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 158:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_48MHz;        /*!< System Clock Frequency (Core Cl
 159:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 160:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_56MHz;        /*!< System Clock Frequency (Core Cl
 161:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 162:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = SYSCLK_FREQ_72MHz;        /*!< System Clock Frequency (Core Cl
 163:../system/src/cmsis/system_stm32f10x.c **** #else /*!< HSI Selected as System Clock source */
 164:../system/src/cmsis/system_stm32f10x.c ****   uint32_t SystemCoreClock         = HSI_VALUE;        /*!< System Clock Frequency (Core Clock) */
 165:../system/src/cmsis/system_stm32f10x.c **** #endif
 166:../system/src/cmsis/system_stm32f10x.c **** 
 167:../system/src/cmsis/system_stm32f10x.c **** __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 168:../system/src/cmsis/system_stm32f10x.c **** /**
 169:../system/src/cmsis/system_stm32f10x.c ****   * @}
 170:../system/src/cmsis/system_stm32f10x.c ****   */
 171:../system/src/cmsis/system_stm32f10x.c **** 
 172:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_FunctionPrototypes
 173:../system/src/cmsis/system_stm32f10x.c ****   * @{
 174:../system/src/cmsis/system_stm32f10x.c ****   */
 175:../system/src/cmsis/system_stm32f10x.c **** 
 176:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClock(void);
 177:../system/src/cmsis/system_stm32f10x.c **** 
 178:../system/src/cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 179:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockToHSE(void);
 180:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 181:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockTo24(void);
 182:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 183:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockTo36(void);
 184:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 185:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockTo48(void);
 186:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 187:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockTo56(void);  
 188:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 189:../system/src/cmsis/system_stm32f10x.c ****   static void SetSysClockTo72(void);
 190:../system/src/cmsis/system_stm32f10x.c **** #endif
 191:../system/src/cmsis/system_stm32f10x.c **** 
 192:../system/src/cmsis/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 193:../system/src/cmsis/system_stm32f10x.c ****   static void SystemInit_ExtMemCtl(void); 
 194:../system/src/cmsis/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 195:../system/src/cmsis/system_stm32f10x.c **** 
 196:../system/src/cmsis/system_stm32f10x.c **** /**
 197:../system/src/cmsis/system_stm32f10x.c ****   * @}
 198:../system/src/cmsis/system_stm32f10x.c ****   */
 199:../system/src/cmsis/system_stm32f10x.c **** 
 200:../system/src/cmsis/system_stm32f10x.c **** /** @addtogroup STM32F10x_System_Private_Functions
 201:../system/src/cmsis/system_stm32f10x.c ****   * @{
 202:../system/src/cmsis/system_stm32f10x.c ****   */
 203:../system/src/cmsis/system_stm32f10x.c **** 
 204:../system/src/cmsis/system_stm32f10x.c **** /**
 205:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Setup the microcontroller system
 206:../system/src/cmsis/system_stm32f10x.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 207:../system/src/cmsis/system_stm32f10x.c ****   *         SystemCoreClock variable.
 208:../system/src/cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 209:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 210:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 211:../system/src/cmsis/system_stm32f10x.c ****   */
 212:../system/src/cmsis/system_stm32f10x.c **** void SystemInit (void)
 213:../system/src/cmsis/system_stm32f10x.c **** {
 214:../system/src/cmsis/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 215:../system/src/cmsis/system_stm32f10x.c ****   /* Set HSION bit */
 216:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR |= (uint32_t)0x00000001;
 217:../system/src/cmsis/system_stm32f10x.c **** 
 218:../system/src/cmsis/system_stm32f10x.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 219:../system/src/cmsis/system_stm32f10x.c **** #ifndef STM32F10X_CL
 220:../system/src/cmsis/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
 221:../system/src/cmsis/system_stm32f10x.c **** #else
 222:../system/src/cmsis/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 223:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */   
 224:../system/src/cmsis/system_stm32f10x.c ****   
 225:../system/src/cmsis/system_stm32f10x.c ****   /* Reset HSEON, CSSON and PLLON bits */
 226:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 227:../system/src/cmsis/system_stm32f10x.c **** 
 228:../system/src/cmsis/system_stm32f10x.c ****   /* Reset HSEBYP bit */
 229:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 230:../system/src/cmsis/system_stm32f10x.c **** 
 231:../system/src/cmsis/system_stm32f10x.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 232:../system/src/cmsis/system_stm32f10x.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 233:../system/src/cmsis/system_stm32f10x.c **** 
 234:../system/src/cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 235:../system/src/cmsis/system_stm32f10x.c ****   /* Reset PLL2ON and PLL3ON bits */
 236:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 237:../system/src/cmsis/system_stm32f10x.c **** 
 238:../system/src/cmsis/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 239:../system/src/cmsis/system_stm32f10x.c ****   RCC->CIR = 0x00FF0000;
 240:../system/src/cmsis/system_stm32f10x.c **** 
 241:../system/src/cmsis/system_stm32f10x.c ****   /* Reset CFGR2 register */
 242:../system/src/cmsis/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;
 243:../system/src/cmsis/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 244:../system/src/cmsis/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 245:../system/src/cmsis/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 246:../system/src/cmsis/system_stm32f10x.c **** 
 247:../system/src/cmsis/system_stm32f10x.c ****   /* Reset CFGR2 register */
 248:../system/src/cmsis/system_stm32f10x.c ****   RCC->CFGR2 = 0x00000000;      
 249:../system/src/cmsis/system_stm32f10x.c **** #else
 250:../system/src/cmsis/system_stm32f10x.c ****   /* Disable all interrupts and clear pending bits  */
 251:../system/src/cmsis/system_stm32f10x.c ****   RCC->CIR = 0x009F0000;
 252:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 253:../system/src/cmsis/system_stm32f10x.c ****     
 254:../system/src/cmsis/system_stm32f10x.c **** #if defined (STM32F10X_HD) || (defined STM32F10X_XL) || (defined STM32F10X_HD_VL)
 255:../system/src/cmsis/system_stm32f10x.c ****   #ifdef DATA_IN_ExtSRAM
 256:../system/src/cmsis/system_stm32f10x.c ****     SystemInit_ExtMemCtl(); 
 257:../system/src/cmsis/system_stm32f10x.c ****   #endif /* DATA_IN_ExtSRAM */
 258:../system/src/cmsis/system_stm32f10x.c **** #endif 
 259:../system/src/cmsis/system_stm32f10x.c **** 
 260:../system/src/cmsis/system_stm32f10x.c ****   /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
 261:../system/src/cmsis/system_stm32f10x.c ****   /* Configure the Flash Latency cycles and enable prefetch buffer */
 262:../system/src/cmsis/system_stm32f10x.c ****   SetSysClock();
 263:../system/src/cmsis/system_stm32f10x.c **** 
 264:../system/src/cmsis/system_stm32f10x.c **** #ifdef VECT_TAB_SRAM
 265:../system/src/cmsis/system_stm32f10x.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
 266:../system/src/cmsis/system_stm32f10x.c **** #else
 267:../system/src/cmsis/system_stm32f10x.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 268:../system/src/cmsis/system_stm32f10x.c **** #endif 
 269:../system/src/cmsis/system_stm32f10x.c **** }
 270:../system/src/cmsis/system_stm32f10x.c **** 
 271:../system/src/cmsis/system_stm32f10x.c **** /**
 272:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 273:../system/src/cmsis/system_stm32f10x.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 274:../system/src/cmsis/system_stm32f10x.c ****   *         be used by the user application to setup the SysTick timer or configure
 275:../system/src/cmsis/system_stm32f10x.c ****   *         other parameters.
 276:../system/src/cmsis/system_stm32f10x.c ****   *           
 277:../system/src/cmsis/system_stm32f10x.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 278:../system/src/cmsis/system_stm32f10x.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 279:../system/src/cmsis/system_stm32f10x.c ****   *         based on this variable will be incorrect.         
 280:../system/src/cmsis/system_stm32f10x.c ****   *     
 281:../system/src/cmsis/system_stm32f10x.c ****   * @note   - The system frequency computed by this function is not the real 
 282:../system/src/cmsis/system_stm32f10x.c ****   *           frequency in the chip. It is calculated based on the predefined 
 283:../system/src/cmsis/system_stm32f10x.c ****   *           constant and the selected clock source:
 284:../system/src/cmsis/system_stm32f10x.c ****   *             
 285:../system/src/cmsis/system_stm32f10x.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 286:../system/src/cmsis/system_stm32f10x.c ****   *                                              
 287:../system/src/cmsis/system_stm32f10x.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 288:../system/src/cmsis/system_stm32f10x.c ****   *                          
 289:../system/src/cmsis/system_stm32f10x.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 290:../system/src/cmsis/system_stm32f10x.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 291:../system/src/cmsis/system_stm32f10x.c ****   *         
 292:../system/src/cmsis/system_stm32f10x.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 293:../system/src/cmsis/system_stm32f10x.c ****   *             8 MHz) but the real value may vary depending on the variations
 294:../system/src/cmsis/system_stm32f10x.c ****   *             in voltage and temperature.   
 295:../system/src/cmsis/system_stm32f10x.c ****   *    
 296:../system/src/cmsis/system_stm32f10x.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 297:../system/src/cmsis/system_stm32f10x.c ****   *              8 MHz or 25 MHz, depedning on the product used), user has to ensure
 298:../system/src/cmsis/system_stm32f10x.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 299:../system/src/cmsis/system_stm32f10x.c ****   *              Otherwise, this function may have wrong result.
 300:../system/src/cmsis/system_stm32f10x.c ****   *                
 301:../system/src/cmsis/system_stm32f10x.c ****   *         - The result of this function could be not correct when using fractional
 302:../system/src/cmsis/system_stm32f10x.c ****   *           value for HSE crystal.
 303:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 304:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 305:../system/src/cmsis/system_stm32f10x.c ****   */
 306:../system/src/cmsis/system_stm32f10x.c **** void SystemCoreClockUpdate (void)
 307:../system/src/cmsis/system_stm32f10x.c **** {
 308:../system/src/cmsis/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 309:../system/src/cmsis/system_stm32f10x.c **** 
 310:../system/src/cmsis/system_stm32f10x.c **** #ifdef  STM32F10X_CL
 311:../system/src/cmsis/system_stm32f10x.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 312:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 313:../system/src/cmsis/system_stm32f10x.c **** 
 314:../system/src/cmsis/system_stm32f10x.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 315:../system/src/cmsis/system_stm32f10x.c ****   uint32_t prediv1factor = 0;
 316:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL or STM32F10X_HD_VL */
 317:../system/src/cmsis/system_stm32f10x.c ****     
 318:../system/src/cmsis/system_stm32f10x.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:../system/src/cmsis/system_stm32f10x.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 320:../system/src/cmsis/system_stm32f10x.c ****   
 321:../system/src/cmsis/system_stm32f10x.c ****   switch (tmp)
 322:../system/src/cmsis/system_stm32f10x.c ****   {
 323:../system/src/cmsis/system_stm32f10x.c ****     case 0x00:  /* HSI used as system clock */
 324:../system/src/cmsis/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 325:../system/src/cmsis/system_stm32f10x.c ****       break;
 326:../system/src/cmsis/system_stm32f10x.c ****     case 0x04:  /* HSE used as system clock */
 327:../system/src/cmsis/system_stm32f10x.c ****       SystemCoreClock = HSE_VALUE;
 328:../system/src/cmsis/system_stm32f10x.c ****       break;
 329:../system/src/cmsis/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 330:../system/src/cmsis/system_stm32f10x.c **** 
 331:../system/src/cmsis/system_stm32f10x.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 332:../system/src/cmsis/system_stm32f10x.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 333:../system/src/cmsis/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 334:../system/src/cmsis/system_stm32f10x.c ****       
 335:../system/src/cmsis/system_stm32f10x.c **** #ifndef STM32F10X_CL      
 336:../system/src/cmsis/system_stm32f10x.c ****       pllmull = ( pllmull >> 18) + 2;
 337:../system/src/cmsis/system_stm32f10x.c ****       
 338:../system/src/cmsis/system_stm32f10x.c ****       if (pllsource == 0x00)
 339:../system/src/cmsis/system_stm32f10x.c ****       {
 340:../system/src/cmsis/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 341:../system/src/cmsis/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 342:../system/src/cmsis/system_stm32f10x.c ****       }
 343:../system/src/cmsis/system_stm32f10x.c ****       else
 344:../system/src/cmsis/system_stm32f10x.c ****       {
 345:../system/src/cmsis/system_stm32f10x.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || (defined STM32F10X_HD_VL)
 346:../system/src/cmsis/system_stm32f10x.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 347:../system/src/cmsis/system_stm32f10x.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 348:../system/src/cmsis/system_stm32f10x.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 349:../system/src/cmsis/system_stm32f10x.c ****  #else
 350:../system/src/cmsis/system_stm32f10x.c ****         /* HSE selected as PLL clock entry */
 351:../system/src/cmsis/system_stm32f10x.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 352:../system/src/cmsis/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 353:../system/src/cmsis/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE >> 1) * pllmull;
 354:../system/src/cmsis/system_stm32f10x.c ****         }
 355:../system/src/cmsis/system_stm32f10x.c ****         else
 356:../system/src/cmsis/system_stm32f10x.c ****         {
 357:../system/src/cmsis/system_stm32f10x.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 358:../system/src/cmsis/system_stm32f10x.c ****         }
 359:../system/src/cmsis/system_stm32f10x.c ****  #endif
 360:../system/src/cmsis/system_stm32f10x.c ****       }
 361:../system/src/cmsis/system_stm32f10x.c **** #else
 362:../system/src/cmsis/system_stm32f10x.c ****       pllmull = pllmull >> 18;
 363:../system/src/cmsis/system_stm32f10x.c ****       
 364:../system/src/cmsis/system_stm32f10x.c ****       if (pllmull != 0x0D)
 365:../system/src/cmsis/system_stm32f10x.c ****       {
 366:../system/src/cmsis/system_stm32f10x.c ****          pllmull += 2;
 367:../system/src/cmsis/system_stm32f10x.c ****       }
 368:../system/src/cmsis/system_stm32f10x.c ****       else
 369:../system/src/cmsis/system_stm32f10x.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 370:../system/src/cmsis/system_stm32f10x.c ****         pllmull = 13 / 2; 
 371:../system/src/cmsis/system_stm32f10x.c ****       }
 372:../system/src/cmsis/system_stm32f10x.c ****             
 373:../system/src/cmsis/system_stm32f10x.c ****       if (pllsource == 0x00)
 374:../system/src/cmsis/system_stm32f10x.c ****       {
 375:../system/src/cmsis/system_stm32f10x.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 376:../system/src/cmsis/system_stm32f10x.c ****         SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 377:../system/src/cmsis/system_stm32f10x.c ****       }
 378:../system/src/cmsis/system_stm32f10x.c ****       else
 379:../system/src/cmsis/system_stm32f10x.c ****       {/* PREDIV1 selected as PLL clock entry */
 380:../system/src/cmsis/system_stm32f10x.c ****         
 381:../system/src/cmsis/system_stm32f10x.c ****         /* Get PREDIV1 clock source and division factor */
 382:../system/src/cmsis/system_stm32f10x.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 383:../system/src/cmsis/system_stm32f10x.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 384:../system/src/cmsis/system_stm32f10x.c ****         
 385:../system/src/cmsis/system_stm32f10x.c ****         if (prediv1source == 0)
 386:../system/src/cmsis/system_stm32f10x.c ****         { 
 387:../system/src/cmsis/system_stm32f10x.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 388:../system/src/cmsis/system_stm32f10x.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 389:../system/src/cmsis/system_stm32f10x.c ****         }
 390:../system/src/cmsis/system_stm32f10x.c ****         else
 391:../system/src/cmsis/system_stm32f10x.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 392:../system/src/cmsis/system_stm32f10x.c ****           
 393:../system/src/cmsis/system_stm32f10x.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 394:../system/src/cmsis/system_stm32f10x.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
 395:../system/src/cmsis/system_stm32f10x.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
 396:../system/src/cmsis/system_stm32f10x.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 397:../system/src/cmsis/system_stm32f10x.c ****         }
 398:../system/src/cmsis/system_stm32f10x.c ****       }
 399:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */ 
 400:../system/src/cmsis/system_stm32f10x.c ****       break;
 401:../system/src/cmsis/system_stm32f10x.c **** 
 402:../system/src/cmsis/system_stm32f10x.c ****     default:
 403:../system/src/cmsis/system_stm32f10x.c ****       SystemCoreClock = HSI_VALUE;
 404:../system/src/cmsis/system_stm32f10x.c ****       break;
 405:../system/src/cmsis/system_stm32f10x.c ****   }
 406:../system/src/cmsis/system_stm32f10x.c ****   
 407:../system/src/cmsis/system_stm32f10x.c ****   /* Compute HCLK clock frequency ----------------*/
 408:../system/src/cmsis/system_stm32f10x.c ****   /* Get HCLK prescaler */
 409:../system/src/cmsis/system_stm32f10x.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 410:../system/src/cmsis/system_stm32f10x.c ****   /* HCLK clock frequency */
 411:../system/src/cmsis/system_stm32f10x.c ****   SystemCoreClock >>= tmp;  
 412:../system/src/cmsis/system_stm32f10x.c **** }
 413:../system/src/cmsis/system_stm32f10x.c **** 
 414:../system/src/cmsis/system_stm32f10x.c **** /**
 415:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
 416:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 417:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 418:../system/src/cmsis/system_stm32f10x.c ****   */
 419:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClock(void)
 420:../system/src/cmsis/system_stm32f10x.c **** {
 421:../system/src/cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 422:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockToHSE();
 423:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 424:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockTo24();
 425:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 426:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockTo36();
 427:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 428:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockTo48();
 429:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 430:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockTo56();  
 431:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 432:../system/src/cmsis/system_stm32f10x.c ****   SetSysClockTo72();
 433:../system/src/cmsis/system_stm32f10x.c **** #endif
 434:../system/src/cmsis/system_stm32f10x.c ****  
 435:../system/src/cmsis/system_stm32f10x.c ****  /* If none of the define above is enabled, the HSI is used as System clock
 436:../system/src/cmsis/system_stm32f10x.c ****     source (default after reset) */ 
 437:../system/src/cmsis/system_stm32f10x.c **** }
 438:../system/src/cmsis/system_stm32f10x.c **** 
 439:../system/src/cmsis/system_stm32f10x.c **** /**
 440:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Setup the external memory controller. Called in startup_stm32f10x.s 
 441:../system/src/cmsis/system_stm32f10x.c ****   *          before jump to __main
 442:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 443:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 444:../system/src/cmsis/system_stm32f10x.c ****   */ 
 445:../system/src/cmsis/system_stm32f10x.c **** #ifdef DATA_IN_ExtSRAM
 446:../system/src/cmsis/system_stm32f10x.c **** /**
 447:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Setup the external memory controller. 
 448:../system/src/cmsis/system_stm32f10x.c ****   *         Called in startup_stm32f10x_xx.s/.c before jump to main.
 449:../system/src/cmsis/system_stm32f10x.c ****   * 	      This function configures the external SRAM mounted on STM3210E-EVAL
 450:../system/src/cmsis/system_stm32f10x.c ****   *         board (STM32 High density devices). This SRAM will be used as program
 451:../system/src/cmsis/system_stm32f10x.c ****   *         data memory (including heap and stack).
 452:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 453:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 454:../system/src/cmsis/system_stm32f10x.c ****   */ 
 455:../system/src/cmsis/system_stm32f10x.c **** void SystemInit_ExtMemCtl(void) 
 456:../system/src/cmsis/system_stm32f10x.c **** {
 457:../system/src/cmsis/system_stm32f10x.c **** /*!< FSMC Bank1 NOR/SRAM3 is used for the STM3210E-EVAL, if another Bank is 
 458:../system/src/cmsis/system_stm32f10x.c ****   required, then adjust the Register Addresses */
 459:../system/src/cmsis/system_stm32f10x.c **** 
 460:../system/src/cmsis/system_stm32f10x.c ****   /* Enable FSMC clock */
 461:../system/src/cmsis/system_stm32f10x.c ****   RCC->AHBENR = 0x00000114;
 462:../system/src/cmsis/system_stm32f10x.c ****   
 463:../system/src/cmsis/system_stm32f10x.c ****   /* Enable GPIOD, GPIOE, GPIOF and GPIOG clocks */  
 464:../system/src/cmsis/system_stm32f10x.c ****   RCC->APB2ENR = 0x000001E0;
 465:../system/src/cmsis/system_stm32f10x.c ****   
 466:../system/src/cmsis/system_stm32f10x.c **** /* ---------------  SRAM Data lines, NOE and NWE configuration ---------------*/
 467:../system/src/cmsis/system_stm32f10x.c **** /*----------------  SRAM Address lines configuration -------------------------*/
 468:../system/src/cmsis/system_stm32f10x.c **** /*----------------  NOE and NWE configuration --------------------------------*/  
 469:../system/src/cmsis/system_stm32f10x.c **** /*----------------  NE3 configuration ----------------------------------------*/
 470:../system/src/cmsis/system_stm32f10x.c **** /*----------------  NBL0, NBL1 configuration ---------------------------------*/
 471:../system/src/cmsis/system_stm32f10x.c ****   
 472:../system/src/cmsis/system_stm32f10x.c ****   GPIOD->CRL = 0x44BB44BB;  
 473:../system/src/cmsis/system_stm32f10x.c ****   GPIOD->CRH = 0xBBBBBBBB;
 474:../system/src/cmsis/system_stm32f10x.c **** 
 475:../system/src/cmsis/system_stm32f10x.c ****   GPIOE->CRL = 0xB44444BB;  
 476:../system/src/cmsis/system_stm32f10x.c ****   GPIOE->CRH = 0xBBBBBBBB;
 477:../system/src/cmsis/system_stm32f10x.c **** 
 478:../system/src/cmsis/system_stm32f10x.c ****   GPIOF->CRL = 0x44BBBBBB;  
 479:../system/src/cmsis/system_stm32f10x.c ****   GPIOF->CRH = 0xBBBB4444;
 480:../system/src/cmsis/system_stm32f10x.c **** 
 481:../system/src/cmsis/system_stm32f10x.c ****   GPIOG->CRL = 0x44BBBBBB;  
 482:../system/src/cmsis/system_stm32f10x.c ****   GPIOG->CRH = 0x44444B44;
 483:../system/src/cmsis/system_stm32f10x.c ****    
 484:../system/src/cmsis/system_stm32f10x.c **** /*----------------  FSMC Configuration ---------------------------------------*/  
 485:../system/src/cmsis/system_stm32f10x.c **** /*----------------  Enable FSMC Bank1_SRAM Bank ------------------------------*/
 486:../system/src/cmsis/system_stm32f10x.c ****   
 487:../system/src/cmsis/system_stm32f10x.c ****   FSMC_Bank1->BTCR[4] = 0x00001011;
 488:../system/src/cmsis/system_stm32f10x.c ****   FSMC_Bank1->BTCR[5] = 0x00000200;
 489:../system/src/cmsis/system_stm32f10x.c **** }
 490:../system/src/cmsis/system_stm32f10x.c **** #endif /* DATA_IN_ExtSRAM */
 491:../system/src/cmsis/system_stm32f10x.c **** 
 492:../system/src/cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 493:../system/src/cmsis/system_stm32f10x.c **** /**
 494:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Selects HSE as System clock source and configure HCLK, PCLK2
 495:../system/src/cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 496:../system/src/cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 497:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 498:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 499:../system/src/cmsis/system_stm32f10x.c ****   */
 500:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClockToHSE(void)
 501:../system/src/cmsis/system_stm32f10x.c **** {
 502:../system/src/cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 503:../system/src/cmsis/system_stm32f10x.c ****   
 504:../system/src/cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 505:../system/src/cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 506:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 507:../system/src/cmsis/system_stm32f10x.c ****  
 508:../system/src/cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 509:../system/src/cmsis/system_stm32f10x.c ****   do
 510:../system/src/cmsis/system_stm32f10x.c ****   {
 511:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 512:../system/src/cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 513:../system/src/cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 514:../system/src/cmsis/system_stm32f10x.c **** 
 515:../system/src/cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 516:../system/src/cmsis/system_stm32f10x.c ****   {
 517:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 518:../system/src/cmsis/system_stm32f10x.c ****   }
 519:../system/src/cmsis/system_stm32f10x.c ****   else
 520:../system/src/cmsis/system_stm32f10x.c ****   {
 521:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 522:../system/src/cmsis/system_stm32f10x.c ****   }  
 523:../system/src/cmsis/system_stm32f10x.c **** 
 524:../system/src/cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 525:../system/src/cmsis/system_stm32f10x.c ****   {
 526:../system/src/cmsis/system_stm32f10x.c **** 
 527:../system/src/cmsis/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL
 528:../system/src/cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 529:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 530:../system/src/cmsis/system_stm32f10x.c **** 
 531:../system/src/cmsis/system_stm32f10x.c ****     /* Flash 0 wait state */
 532:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 533:../system/src/cmsis/system_stm32f10x.c **** 
 534:../system/src/cmsis/system_stm32f10x.c **** #ifndef STM32F10X_CL
 535:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 536:../system/src/cmsis/system_stm32f10x.c **** #else
 537:../system/src/cmsis/system_stm32f10x.c ****     if (HSE_VALUE <= 24000000)
 538:../system/src/cmsis/system_stm32f10x.c **** 	{
 539:../system/src/cmsis/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;
 540:../system/src/cmsis/system_stm32f10x.c **** 	}
 541:../system/src/cmsis/system_stm32f10x.c **** 	else
 542:../system/src/cmsis/system_stm32f10x.c **** 	{
 543:../system/src/cmsis/system_stm32f10x.c ****       FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;
 544:../system/src/cmsis/system_stm32f10x.c **** 	}
 545:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 546:../system/src/cmsis/system_stm32f10x.c **** #endif
 547:../system/src/cmsis/system_stm32f10x.c ****  
 548:../system/src/cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 549:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 550:../system/src/cmsis/system_stm32f10x.c ****       
 551:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 552:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 553:../system/src/cmsis/system_stm32f10x.c ****     
 554:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 555:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 556:../system/src/cmsis/system_stm32f10x.c ****     
 557:../system/src/cmsis/system_stm32f10x.c ****     /* Select HSE as system clock source */
 558:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 559:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_HSE;    
 560:../system/src/cmsis/system_stm32f10x.c **** 
 561:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till HSE is used as system clock source */
 562:../system/src/cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x04)
 563:../system/src/cmsis/system_stm32f10x.c ****     {
 564:../system/src/cmsis/system_stm32f10x.c ****     }
 565:../system/src/cmsis/system_stm32f10x.c ****   }
 566:../system/src/cmsis/system_stm32f10x.c ****   else
 567:../system/src/cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 568:../system/src/cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 569:../system/src/cmsis/system_stm32f10x.c ****   }  
 570:../system/src/cmsis/system_stm32f10x.c **** }
 571:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_24MHz
 572:../system/src/cmsis/system_stm32f10x.c **** /**
 573:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 24MHz and configure HCLK, PCLK2 
 574:../system/src/cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers.
 575:../system/src/cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 576:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 577:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 578:../system/src/cmsis/system_stm32f10x.c ****   */
 579:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClockTo24(void)
 580:../system/src/cmsis/system_stm32f10x.c **** {
 581:../system/src/cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 582:../system/src/cmsis/system_stm32f10x.c ****   
 583:../system/src/cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 584:../system/src/cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 585:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 586:../system/src/cmsis/system_stm32f10x.c ****  
 587:../system/src/cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 588:../system/src/cmsis/system_stm32f10x.c ****   do
 589:../system/src/cmsis/system_stm32f10x.c ****   {
 590:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 591:../system/src/cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 592:../system/src/cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 593:../system/src/cmsis/system_stm32f10x.c **** 
 594:../system/src/cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 595:../system/src/cmsis/system_stm32f10x.c ****   {
 596:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 597:../system/src/cmsis/system_stm32f10x.c ****   }
 598:../system/src/cmsis/system_stm32f10x.c ****   else
 599:../system/src/cmsis/system_stm32f10x.c ****   {
 600:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 601:../system/src/cmsis/system_stm32f10x.c ****   }  
 602:../system/src/cmsis/system_stm32f10x.c **** 
 603:../system/src/cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 604:../system/src/cmsis/system_stm32f10x.c ****   {
 605:../system/src/cmsis/system_stm32f10x.c **** #if !defined STM32F10X_LD_VL && !defined STM32F10X_MD_VL && !defined STM32F10X_HD_VL 
 606:../system/src/cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 607:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 608:../system/src/cmsis/system_stm32f10x.c **** 
 609:../system/src/cmsis/system_stm32f10x.c ****     /* Flash 0 wait state */
 610:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 611:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_0;    
 612:../system/src/cmsis/system_stm32f10x.c **** #endif
 613:../system/src/cmsis/system_stm32f10x.c ****  
 614:../system/src/cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 615:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 616:../system/src/cmsis/system_stm32f10x.c ****       
 617:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 618:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 619:../system/src/cmsis/system_stm32f10x.c ****     
 620:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 621:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 622:../system/src/cmsis/system_stm32f10x.c ****     
 623:../system/src/cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 624:../system/src/cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 625:../system/src/cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 24 MHz */ 
 626:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 627:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 628:../system/src/cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 629:../system/src/cmsis/system_stm32f10x.c **** 
 630:../system/src/cmsis/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 631:../system/src/cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */       
 632:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 633:../system/src/cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 634:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 635:../system/src/cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 636:../system/src/cmsis/system_stm32f10x.c ****   
 637:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
 638:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 639:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 640:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 641:../system/src/cmsis/system_stm32f10x.c ****     {
 642:../system/src/cmsis/system_stm32f10x.c ****     }   
 643:../system/src/cmsis/system_stm32f10x.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 644:../system/src/cmsis/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 645:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 646:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_PREDIV1 | RCC_CFGR_PLLXTPRE_PREDIV1_Div2 | RCC_CFGR_PLL
 647:../system/src/cmsis/system_stm32f10x.c **** #else    
 648:../system/src/cmsis/system_stm32f10x.c ****     /*  PLL configuration:  = (HSE / 2) * 6 = 24 MHz */
 649:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 650:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL6);
 651:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 652:../system/src/cmsis/system_stm32f10x.c **** 
 653:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL */
 654:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 655:../system/src/cmsis/system_stm32f10x.c **** 
 656:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
 657:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 658:../system/src/cmsis/system_stm32f10x.c ****     {
 659:../system/src/cmsis/system_stm32f10x.c ****     }
 660:../system/src/cmsis/system_stm32f10x.c **** 
 661:../system/src/cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
 662:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 663:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 664:../system/src/cmsis/system_stm32f10x.c **** 
 665:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 666:../system/src/cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 667:../system/src/cmsis/system_stm32f10x.c ****     {
 668:../system/src/cmsis/system_stm32f10x.c ****     }
 669:../system/src/cmsis/system_stm32f10x.c ****   }
 670:../system/src/cmsis/system_stm32f10x.c ****   else
 671:../system/src/cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 672:../system/src/cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 673:../system/src/cmsis/system_stm32f10x.c ****   } 
 674:../system/src/cmsis/system_stm32f10x.c **** }
 675:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_36MHz
 676:../system/src/cmsis/system_stm32f10x.c **** /**
 677:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 36MHz and configure HCLK, PCLK2 
 678:../system/src/cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 679:../system/src/cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 680:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 681:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 682:../system/src/cmsis/system_stm32f10x.c ****   */
 683:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClockTo36(void)
 684:../system/src/cmsis/system_stm32f10x.c **** {
 685:../system/src/cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 686:../system/src/cmsis/system_stm32f10x.c ****   
 687:../system/src/cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 688:../system/src/cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 689:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 690:../system/src/cmsis/system_stm32f10x.c ****  
 691:../system/src/cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 692:../system/src/cmsis/system_stm32f10x.c ****   do
 693:../system/src/cmsis/system_stm32f10x.c ****   {
 694:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 695:../system/src/cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 696:../system/src/cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 697:../system/src/cmsis/system_stm32f10x.c **** 
 698:../system/src/cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 699:../system/src/cmsis/system_stm32f10x.c ****   {
 700:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 701:../system/src/cmsis/system_stm32f10x.c ****   }
 702:../system/src/cmsis/system_stm32f10x.c ****   else
 703:../system/src/cmsis/system_stm32f10x.c ****   {
 704:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 705:../system/src/cmsis/system_stm32f10x.c ****   }  
 706:../system/src/cmsis/system_stm32f10x.c **** 
 707:../system/src/cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 708:../system/src/cmsis/system_stm32f10x.c ****   {
 709:../system/src/cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 710:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 711:../system/src/cmsis/system_stm32f10x.c **** 
 712:../system/src/cmsis/system_stm32f10x.c ****     /* Flash 1 wait state */
 713:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 714:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 715:../system/src/cmsis/system_stm32f10x.c ****  
 716:../system/src/cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 717:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 718:../system/src/cmsis/system_stm32f10x.c ****       
 719:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 720:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 721:../system/src/cmsis/system_stm32f10x.c ****     
 722:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 723:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV1;
 724:../system/src/cmsis/system_stm32f10x.c ****     
 725:../system/src/cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 726:../system/src/cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 727:../system/src/cmsis/system_stm32f10x.c ****     
 728:../system/src/cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 36 MHz */ 
 729:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 730:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 731:../system/src/cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
 732:../system/src/cmsis/system_stm32f10x.c **** 
 733:../system/src/cmsis/system_stm32f10x.c **** 	/*!< PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 734:../system/src/cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 10 = 4 MHz */
 735:../system/src/cmsis/system_stm32f10x.c ****         
 736:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 737:../system/src/cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 738:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 739:../system/src/cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV10);
 740:../system/src/cmsis/system_stm32f10x.c ****   
 741:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
 742:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 743:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 744:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 745:../system/src/cmsis/system_stm32f10x.c ****     {
 746:../system/src/cmsis/system_stm32f10x.c ****     }
 747:../system/src/cmsis/system_stm32f10x.c ****     
 748:../system/src/cmsis/system_stm32f10x.c **** #else    
 749:../system/src/cmsis/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = (HSE / 2) * 9 = 36 MHz */
 750:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 751:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLXTPRE_HSE_Div2 | RCC_CFGR_PLLMULL9);
 752:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 753:../system/src/cmsis/system_stm32f10x.c **** 
 754:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL */
 755:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 756:../system/src/cmsis/system_stm32f10x.c **** 
 757:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
 758:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 759:../system/src/cmsis/system_stm32f10x.c ****     {
 760:../system/src/cmsis/system_stm32f10x.c ****     }
 761:../system/src/cmsis/system_stm32f10x.c **** 
 762:../system/src/cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
 763:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 764:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 765:../system/src/cmsis/system_stm32f10x.c **** 
 766:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 767:../system/src/cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 768:../system/src/cmsis/system_stm32f10x.c ****     {
 769:../system/src/cmsis/system_stm32f10x.c ****     }
 770:../system/src/cmsis/system_stm32f10x.c ****   }
 771:../system/src/cmsis/system_stm32f10x.c ****   else
 772:../system/src/cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 773:../system/src/cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 774:../system/src/cmsis/system_stm32f10x.c ****   } 
 775:../system/src/cmsis/system_stm32f10x.c **** }
 776:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_48MHz
 777:../system/src/cmsis/system_stm32f10x.c **** /**
 778:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 48MHz and configure HCLK, PCLK2 
 779:../system/src/cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 780:../system/src/cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 781:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 782:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 783:../system/src/cmsis/system_stm32f10x.c ****   */
 784:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClockTo48(void)
 785:../system/src/cmsis/system_stm32f10x.c **** {
 786:../system/src/cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 787:../system/src/cmsis/system_stm32f10x.c ****   
 788:../system/src/cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 789:../system/src/cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 790:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 791:../system/src/cmsis/system_stm32f10x.c ****  
 792:../system/src/cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 793:../system/src/cmsis/system_stm32f10x.c ****   do
 794:../system/src/cmsis/system_stm32f10x.c ****   {
 795:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 796:../system/src/cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 797:../system/src/cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 798:../system/src/cmsis/system_stm32f10x.c **** 
 799:../system/src/cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 800:../system/src/cmsis/system_stm32f10x.c ****   {
 801:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 802:../system/src/cmsis/system_stm32f10x.c ****   }
 803:../system/src/cmsis/system_stm32f10x.c ****   else
 804:../system/src/cmsis/system_stm32f10x.c ****   {
 805:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 806:../system/src/cmsis/system_stm32f10x.c ****   }  
 807:../system/src/cmsis/system_stm32f10x.c **** 
 808:../system/src/cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 809:../system/src/cmsis/system_stm32f10x.c ****   {
 810:../system/src/cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 811:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 812:../system/src/cmsis/system_stm32f10x.c **** 
 813:../system/src/cmsis/system_stm32f10x.c ****     /* Flash 1 wait state */
 814:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 815:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_1;    
 816:../system/src/cmsis/system_stm32f10x.c ****  
 817:../system/src/cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 818:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 819:../system/src/cmsis/system_stm32f10x.c ****       
 820:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 821:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 822:../system/src/cmsis/system_stm32f10x.c ****     
 823:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 824:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 825:../system/src/cmsis/system_stm32f10x.c ****     
 826:../system/src/cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 827:../system/src/cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 828:../system/src/cmsis/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 829:../system/src/cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 830:../system/src/cmsis/system_stm32f10x.c ****         
 831:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 832:../system/src/cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 833:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 834:../system/src/cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 835:../system/src/cmsis/system_stm32f10x.c ****   
 836:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
 837:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 838:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 839:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 840:../system/src/cmsis/system_stm32f10x.c ****     {
 841:../system/src/cmsis/system_stm32f10x.c ****     }
 842:../system/src/cmsis/system_stm32f10x.c ****     
 843:../system/src/cmsis/system_stm32f10x.c ****    
 844:../system/src/cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 6 = 48 MHz */ 
 845:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 846:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 847:../system/src/cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL6); 
 848:../system/src/cmsis/system_stm32f10x.c **** #else    
 849:../system/src/cmsis/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 6 = 48 MHz */
 850:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 851:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 852:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 853:../system/src/cmsis/system_stm32f10x.c **** 
 854:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL */
 855:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 856:../system/src/cmsis/system_stm32f10x.c **** 
 857:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
 858:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 859:../system/src/cmsis/system_stm32f10x.c ****     {
 860:../system/src/cmsis/system_stm32f10x.c ****     }
 861:../system/src/cmsis/system_stm32f10x.c **** 
 862:../system/src/cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
 863:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 864:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 865:../system/src/cmsis/system_stm32f10x.c **** 
 866:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 867:../system/src/cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 868:../system/src/cmsis/system_stm32f10x.c ****     {
 869:../system/src/cmsis/system_stm32f10x.c ****     }
 870:../system/src/cmsis/system_stm32f10x.c ****   }
 871:../system/src/cmsis/system_stm32f10x.c ****   else
 872:../system/src/cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 873:../system/src/cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 874:../system/src/cmsis/system_stm32f10x.c ****   } 
 875:../system/src/cmsis/system_stm32f10x.c **** }
 876:../system/src/cmsis/system_stm32f10x.c **** 
 877:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_56MHz
 878:../system/src/cmsis/system_stm32f10x.c **** /**
 879:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 56MHz and configure HCLK, PCLK2 
 880:../system/src/cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 881:../system/src/cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 882:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 883:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 884:../system/src/cmsis/system_stm32f10x.c ****   */
 885:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClockTo56(void)
 886:../system/src/cmsis/system_stm32f10x.c **** {
 887:../system/src/cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 888:../system/src/cmsis/system_stm32f10x.c ****   
 889:../system/src/cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/   
 890:../system/src/cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 891:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 892:../system/src/cmsis/system_stm32f10x.c ****  
 893:../system/src/cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 894:../system/src/cmsis/system_stm32f10x.c ****   do
 895:../system/src/cmsis/system_stm32f10x.c ****   {
 896:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 897:../system/src/cmsis/system_stm32f10x.c ****     StartUpCounter++;  
 898:../system/src/cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 899:../system/src/cmsis/system_stm32f10x.c **** 
 900:../system/src/cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 901:../system/src/cmsis/system_stm32f10x.c ****   {
 902:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
 903:../system/src/cmsis/system_stm32f10x.c ****   }
 904:../system/src/cmsis/system_stm32f10x.c ****   else
 905:../system/src/cmsis/system_stm32f10x.c ****   {
 906:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
 907:../system/src/cmsis/system_stm32f10x.c ****   }  
 908:../system/src/cmsis/system_stm32f10x.c **** 
 909:../system/src/cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
 910:../system/src/cmsis/system_stm32f10x.c ****   {
 911:../system/src/cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
 912:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
 913:../system/src/cmsis/system_stm32f10x.c **** 
 914:../system/src/cmsis/system_stm32f10x.c ****     /* Flash 2 wait state */
 915:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 916:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 917:../system/src/cmsis/system_stm32f10x.c ****  
 918:../system/src/cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
 919:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 920:../system/src/cmsis/system_stm32f10x.c ****       
 921:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
 922:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 923:../system/src/cmsis/system_stm32f10x.c ****     
 924:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
 925:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 926:../system/src/cmsis/system_stm32f10x.c **** 
 927:../system/src/cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
 928:../system/src/cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
 929:../system/src/cmsis/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
 930:../system/src/cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
 931:../system/src/cmsis/system_stm32f10x.c ****         
 932:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
 933:../system/src/cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
 934:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
 935:../system/src/cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
 936:../system/src/cmsis/system_stm32f10x.c ****   
 937:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
 938:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
 939:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
 940:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
 941:../system/src/cmsis/system_stm32f10x.c ****     {
 942:../system/src/cmsis/system_stm32f10x.c ****     }
 943:../system/src/cmsis/system_stm32f10x.c ****     
 944:../system/src/cmsis/system_stm32f10x.c ****    
 945:../system/src/cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 7 = 56 MHz */ 
 946:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
 947:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
 948:../system/src/cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL7); 
 949:../system/src/cmsis/system_stm32f10x.c **** #else     
 950:../system/src/cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = HSE * 7 = 56 MHz */
 951:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 952:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL7);
 953:../system/src/cmsis/system_stm32f10x.c **** 
 954:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 955:../system/src/cmsis/system_stm32f10x.c **** 
 956:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL */
 957:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
 958:../system/src/cmsis/system_stm32f10x.c **** 
 959:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
 960:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 961:../system/src/cmsis/system_stm32f10x.c ****     {
 962:../system/src/cmsis/system_stm32f10x.c ****     }
 963:../system/src/cmsis/system_stm32f10x.c **** 
 964:../system/src/cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
 965:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 966:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 967:../system/src/cmsis/system_stm32f10x.c **** 
 968:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
 969:../system/src/cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 970:../system/src/cmsis/system_stm32f10x.c ****     {
 971:../system/src/cmsis/system_stm32f10x.c ****     }
 972:../system/src/cmsis/system_stm32f10x.c ****   }
 973:../system/src/cmsis/system_stm32f10x.c ****   else
 974:../system/src/cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
 975:../system/src/cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
 976:../system/src/cmsis/system_stm32f10x.c ****   } 
 977:../system/src/cmsis/system_stm32f10x.c **** }
 978:../system/src/cmsis/system_stm32f10x.c **** 
 979:../system/src/cmsis/system_stm32f10x.c **** #elif defined SYSCLK_FREQ_72MHz
 980:../system/src/cmsis/system_stm32f10x.c **** /**
 981:../system/src/cmsis/system_stm32f10x.c ****   * @brief  Sets System clock frequency to 72MHz and configure HCLK, PCLK2 
 982:../system/src/cmsis/system_stm32f10x.c ****   *         and PCLK1 prescalers. 
 983:../system/src/cmsis/system_stm32f10x.c ****   * @note   This function should be used only after reset.
 984:../system/src/cmsis/system_stm32f10x.c ****   * @param  None
 985:../system/src/cmsis/system_stm32f10x.c ****   * @retval None
 986:../system/src/cmsis/system_stm32f10x.c ****   */
 987:../system/src/cmsis/system_stm32f10x.c **** static void SetSysClockTo72(void)
 988:../system/src/cmsis/system_stm32f10x.c **** {
  25              		.loc 1 988 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 82B0     		sub	sp, sp, #8
  31              		.cfi_def_cfa_offset 8
 989:../system/src/cmsis/system_stm32f10x.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  32              		.loc 1 989 0
  33 0002 0023     		movs	r3, #0
  34 0004 0193     		str	r3, [sp, #4]
  35 0006 0093     		str	r3, [sp]
 990:../system/src/cmsis/system_stm32f10x.c ****   
 991:../system/src/cmsis/system_stm32f10x.c ****   /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
 992:../system/src/cmsis/system_stm32f10x.c ****   /* Enable HSE */    
 993:../system/src/cmsis/system_stm32f10x.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  36              		.loc 1 993 0
  37 0008 2C4A     		ldr	r2, .L11
  38 000a 1368     		ldr	r3, [r2]
  39 000c 43F48033 		orr	r3, r3, #65536
  40 0010 1360     		str	r3, [r2]
  41              	.L3:
 994:../system/src/cmsis/system_stm32f10x.c ****  
 995:../system/src/cmsis/system_stm32f10x.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 996:../system/src/cmsis/system_stm32f10x.c ****   do
 997:../system/src/cmsis/system_stm32f10x.c ****   {
 998:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
  42              		.loc 1 998 0 discriminator 2
  43 0012 2A4B     		ldr	r3, .L11
  44 0014 1B68     		ldr	r3, [r3]
  45 0016 03F40033 		and	r3, r3, #131072
  46 001a 0093     		str	r3, [sp]
 999:../system/src/cmsis/system_stm32f10x.c ****     StartUpCounter++;  
  47              		.loc 1 999 0 discriminator 2
  48 001c 019B     		ldr	r3, [sp, #4]
  49 001e 0133     		adds	r3, r3, #1
  50 0020 0193     		str	r3, [sp, #4]
1000:../system/src/cmsis/system_stm32f10x.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
  51              		.loc 1 1000 0 discriminator 2
  52 0022 009B     		ldr	r3, [sp]
  53 0024 1BB9     		cbnz	r3, .L2
  54              		.loc 1 1000 0 is_stmt 0 discriminator 1
  55 0026 019B     		ldr	r3, [sp, #4]
  56 0028 B3F5A06F 		cmp	r3, #1280
  57 002c F1D1     		bne	.L3
  58              	.L2:
1001:../system/src/cmsis/system_stm32f10x.c **** 
1002:../system/src/cmsis/system_stm32f10x.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
  59              		.loc 1 1002 0 is_stmt 1
  60 002e 234B     		ldr	r3, .L11
  61 0030 1B68     		ldr	r3, [r3]
  62 0032 13F4003F 		tst	r3, #131072
  63 0036 06D0     		beq	.L4
1003:../system/src/cmsis/system_stm32f10x.c ****   {
1004:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x01;
  64              		.loc 1 1004 0
  65 0038 0123     		movs	r3, #1
  66 003a 0093     		str	r3, [sp]
  67              	.L5:
1005:../system/src/cmsis/system_stm32f10x.c ****   }
1006:../system/src/cmsis/system_stm32f10x.c ****   else
1007:../system/src/cmsis/system_stm32f10x.c ****   {
1008:../system/src/cmsis/system_stm32f10x.c ****     HSEStatus = (uint32_t)0x00;
1009:../system/src/cmsis/system_stm32f10x.c ****   }  
1010:../system/src/cmsis/system_stm32f10x.c **** 
1011:../system/src/cmsis/system_stm32f10x.c ****   if (HSEStatus == (uint32_t)0x01)
  68              		.loc 1 1011 0
  69 003c 009B     		ldr	r3, [sp]
  70 003e 012B     		cmp	r3, #1
  71 0040 04D0     		beq	.L10
  72              	.L1:
1012:../system/src/cmsis/system_stm32f10x.c ****   {
1013:../system/src/cmsis/system_stm32f10x.c ****     /* Enable Prefetch Buffer */
1014:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= FLASH_ACR_PRFTBE;
1015:../system/src/cmsis/system_stm32f10x.c **** 
1016:../system/src/cmsis/system_stm32f10x.c ****     /* Flash 2 wait state */
1017:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
1018:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
1019:../system/src/cmsis/system_stm32f10x.c **** 
1020:../system/src/cmsis/system_stm32f10x.c ****  
1021:../system/src/cmsis/system_stm32f10x.c ****     /* HCLK = SYSCLK */
1022:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
1023:../system/src/cmsis/system_stm32f10x.c ****       
1024:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK2 = HCLK */
1025:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
1026:../system/src/cmsis/system_stm32f10x.c ****     
1027:../system/src/cmsis/system_stm32f10x.c ****     /* PCLK1 = HCLK */
1028:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
1029:../system/src/cmsis/system_stm32f10x.c **** 
1030:../system/src/cmsis/system_stm32f10x.c **** #ifdef STM32F10X_CL
1031:../system/src/cmsis/system_stm32f10x.c ****     /* Configure PLLs ------------------------------------------------------*/
1032:../system/src/cmsis/system_stm32f10x.c ****     /* PLL2 configuration: PLL2CLK = (HSE / 5) * 8 = 40 MHz */
1033:../system/src/cmsis/system_stm32f10x.c ****     /* PREDIV1 configuration: PREDIV1CLK = PLL2 / 5 = 8 MHz */
1034:../system/src/cmsis/system_stm32f10x.c ****         
1035:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 &= (uint32_t)~(RCC_CFGR2_PREDIV2 | RCC_CFGR2_PLL2MUL |
1036:../system/src/cmsis/system_stm32f10x.c ****                               RCC_CFGR2_PREDIV1 | RCC_CFGR2_PREDIV1SRC);
1037:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR2 |= (uint32_t)(RCC_CFGR2_PREDIV2_DIV5 | RCC_CFGR2_PLL2MUL8 |
1038:../system/src/cmsis/system_stm32f10x.c ****                              RCC_CFGR2_PREDIV1SRC_PLL2 | RCC_CFGR2_PREDIV1_DIV5);
1039:../system/src/cmsis/system_stm32f10x.c ****   
1040:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL2 */
1041:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLL2ON;
1042:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL2 is ready */
1043:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLL2RDY) == 0)
1044:../system/src/cmsis/system_stm32f10x.c ****     {
1045:../system/src/cmsis/system_stm32f10x.c ****     }
1046:../system/src/cmsis/system_stm32f10x.c ****     
1047:../system/src/cmsis/system_stm32f10x.c ****    
1048:../system/src/cmsis/system_stm32f10x.c ****     /* PLL configuration: PLLCLK = PREDIV1 * 9 = 72 MHz */ 
1049:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
1050:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
1051:../system/src/cmsis/system_stm32f10x.c ****                             RCC_CFGR_PLLMULL9); 
1052:../system/src/cmsis/system_stm32f10x.c **** #else    
1053:../system/src/cmsis/system_stm32f10x.c ****     /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
1054:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
1055:../system/src/cmsis/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
1056:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
1057:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
1058:../system/src/cmsis/system_stm32f10x.c **** 
1059:../system/src/cmsis/system_stm32f10x.c ****     /* Enable PLL */
1060:../system/src/cmsis/system_stm32f10x.c ****     RCC->CR |= RCC_CR_PLLON;
1061:../system/src/cmsis/system_stm32f10x.c **** 
1062:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is ready */
1063:../system/src/cmsis/system_stm32f10x.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
1064:../system/src/cmsis/system_stm32f10x.c ****     {
1065:../system/src/cmsis/system_stm32f10x.c ****     }
1066:../system/src/cmsis/system_stm32f10x.c ****     
1067:../system/src/cmsis/system_stm32f10x.c ****     /* Select PLL as system clock source */
1068:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
1069:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
1070:../system/src/cmsis/system_stm32f10x.c **** 
1071:../system/src/cmsis/system_stm32f10x.c ****     /* Wait till PLL is used as system clock source */
1072:../system/src/cmsis/system_stm32f10x.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
1073:../system/src/cmsis/system_stm32f10x.c ****     {
1074:../system/src/cmsis/system_stm32f10x.c ****     }
1075:../system/src/cmsis/system_stm32f10x.c ****   }
1076:../system/src/cmsis/system_stm32f10x.c ****   else
1077:../system/src/cmsis/system_stm32f10x.c ****   { /* If HSE fails to start-up, the application will have wrong clock 
1078:../system/src/cmsis/system_stm32f10x.c ****          configuration. User can add here some code to deal with this error */
1079:../system/src/cmsis/system_stm32f10x.c ****   }
1080:../system/src/cmsis/system_stm32f10x.c **** }
  73              		.loc 1 1080 0
  74 0042 02B0     		add	sp, sp, #8
  75              		.cfi_remember_state
  76              		.cfi_def_cfa_offset 0
  77              		@ sp needed
  78 0044 7047     		bx	lr
  79              	.L4:
  80              		.cfi_restore_state
1008:../system/src/cmsis/system_stm32f10x.c ****   }  
  81              		.loc 1 1008 0
  82 0046 0023     		movs	r3, #0
  83 0048 0093     		str	r3, [sp]
  84 004a F7E7     		b	.L5
  85              	.L10:
1014:../system/src/cmsis/system_stm32f10x.c **** 
  86              		.loc 1 1014 0
  87 004c 1C4B     		ldr	r3, .L11+4
  88 004e 1A68     		ldr	r2, [r3]
  89 0050 42F01002 		orr	r2, r2, #16
  90 0054 1A60     		str	r2, [r3]
1017:../system/src/cmsis/system_stm32f10x.c ****     FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
  91              		.loc 1 1017 0
  92 0056 1A68     		ldr	r2, [r3]
  93 0058 22F00302 		bic	r2, r2, #3
  94 005c 1A60     		str	r2, [r3]
1018:../system/src/cmsis/system_stm32f10x.c **** 
  95              		.loc 1 1018 0
  96 005e 1A68     		ldr	r2, [r3]
  97 0060 42F00202 		orr	r2, r2, #2
  98 0064 1A60     		str	r2, [r3]
1022:../system/src/cmsis/system_stm32f10x.c ****       
  99              		.loc 1 1022 0
 100 0066 A3F58053 		sub	r3, r3, #4096
 101 006a 5A68     		ldr	r2, [r3, #4]
 102 006c 5A60     		str	r2, [r3, #4]
1025:../system/src/cmsis/system_stm32f10x.c ****     
 103              		.loc 1 1025 0
 104 006e 5A68     		ldr	r2, [r3, #4]
 105 0070 5A60     		str	r2, [r3, #4]
1028:../system/src/cmsis/system_stm32f10x.c **** 
 106              		.loc 1 1028 0
 107 0072 5A68     		ldr	r2, [r3, #4]
 108 0074 42F48062 		orr	r2, r2, #1024
 109 0078 5A60     		str	r2, [r3, #4]
1054:../system/src/cmsis/system_stm32f10x.c ****                                         RCC_CFGR_PLLMULL));
 110              		.loc 1 1054 0
 111 007a 5A68     		ldr	r2, [r3, #4]
 112 007c 22F47C12 		bic	r2, r2, #4128768
 113 0080 5A60     		str	r2, [r3, #4]
1056:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 114              		.loc 1 1056 0
 115 0082 5A68     		ldr	r2, [r3, #4]
 116 0084 42F4E812 		orr	r2, r2, #1900544
 117 0088 5A60     		str	r2, [r3, #4]
1060:../system/src/cmsis/system_stm32f10x.c **** 
 118              		.loc 1 1060 0
 119 008a 1A68     		ldr	r2, [r3]
 120 008c 42F08072 		orr	r2, r2, #16777216
 121 0090 1A60     		str	r2, [r3]
 122              	.L7:
1063:../system/src/cmsis/system_stm32f10x.c ****     {
 123              		.loc 1 1063 0 discriminator 1
 124 0092 0A4B     		ldr	r3, .L11
 125 0094 1B68     		ldr	r3, [r3]
 126 0096 13F0007F 		tst	r3, #33554432
 127 009a FAD0     		beq	.L7
1068:../system/src/cmsis/system_stm32f10x.c ****     RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 128              		.loc 1 1068 0
 129 009c 074B     		ldr	r3, .L11
 130 009e 5A68     		ldr	r2, [r3, #4]
 131 00a0 22F00302 		bic	r2, r2, #3
 132 00a4 5A60     		str	r2, [r3, #4]
1069:../system/src/cmsis/system_stm32f10x.c **** 
 133              		.loc 1 1069 0
 134 00a6 5A68     		ldr	r2, [r3, #4]
 135 00a8 42F00202 		orr	r2, r2, #2
 136 00ac 5A60     		str	r2, [r3, #4]
 137              	.L8:
1072:../system/src/cmsis/system_stm32f10x.c ****     {
 138              		.loc 1 1072 0 discriminator 1
 139 00ae 034B     		ldr	r3, .L11
 140 00b0 5B68     		ldr	r3, [r3, #4]
 141 00b2 03F00C03 		and	r3, r3, #12
 142 00b6 082B     		cmp	r3, #8
 143 00b8 F9D1     		bne	.L8
 144 00ba C2E7     		b	.L1
 145              	.L12:
 146              		.align	2
 147              	.L11:
 148 00bc 00100240 		.word	1073876992
 149 00c0 00200240 		.word	1073881088
 150              		.cfi_endproc
 151              	.LFE66:
 153              		.section	.text.SetSysClock,"ax",%progbits
 154              		.align	1
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu softvfp
 160              	SetSysClock:
 161              	.LFB65:
 420:../system/src/cmsis/system_stm32f10x.c **** #ifdef SYSCLK_FREQ_HSE
 162              		.loc 1 420 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 0000 08B5     		push	{r3, lr}
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
 432:../system/src/cmsis/system_stm32f10x.c **** #endif
 170              		.loc 1 432 0
 171 0002 FFF7FEFF 		bl	SetSysClockTo72
 172              	.LVL0:
 437:../system/src/cmsis/system_stm32f10x.c **** 
 173              		.loc 1 437 0
 174 0006 08BD     		pop	{r3, pc}
 175              		.cfi_endproc
 176              	.LFE65:
 178              		.section	.text.SystemInit,"ax",%progbits
 179              		.align	1
 180              		.global	SystemInit
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu softvfp
 186              	SystemInit:
 187              	.LFB63:
 213:../system/src/cmsis/system_stm32f10x.c ****   /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
 188              		.loc 1 213 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 08B5     		push	{r3, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 3, -8
 195              		.cfi_offset 14, -4
 216:../system/src/cmsis/system_stm32f10x.c **** 
 196              		.loc 1 216 0
 197 0002 104B     		ldr	r3, .L17
 198 0004 1A68     		ldr	r2, [r3]
 199 0006 42F00102 		orr	r2, r2, #1
 200 000a 1A60     		str	r2, [r3]
 220:../system/src/cmsis/system_stm32f10x.c **** #else
 201              		.loc 1 220 0
 202 000c 5968     		ldr	r1, [r3, #4]
 203 000e 0E4A     		ldr	r2, .L17+4
 204 0010 0A40     		ands	r2, r2, r1
 205 0012 5A60     		str	r2, [r3, #4]
 226:../system/src/cmsis/system_stm32f10x.c **** 
 206              		.loc 1 226 0
 207 0014 1A68     		ldr	r2, [r3]
 208 0016 22F08472 		bic	r2, r2, #17301504
 209 001a 22F48032 		bic	r2, r2, #65536
 210 001e 1A60     		str	r2, [r3]
 229:../system/src/cmsis/system_stm32f10x.c **** 
 211              		.loc 1 229 0
 212 0020 1A68     		ldr	r2, [r3]
 213 0022 22F48022 		bic	r2, r2, #262144
 214 0026 1A60     		str	r2, [r3]
 232:../system/src/cmsis/system_stm32f10x.c **** 
 215              		.loc 1 232 0
 216 0028 5A68     		ldr	r2, [r3, #4]
 217 002a 22F4FE02 		bic	r2, r2, #8323072
 218 002e 5A60     		str	r2, [r3, #4]
 251:../system/src/cmsis/system_stm32f10x.c **** #endif /* STM32F10X_CL */
 219              		.loc 1 251 0
 220 0030 4FF41F02 		mov	r2, #10420224
 221 0034 9A60     		str	r2, [r3, #8]
 262:../system/src/cmsis/system_stm32f10x.c **** 
 222              		.loc 1 262 0
 223 0036 FFF7FEFF 		bl	SetSysClock
 224              	.LVL1:
 267:../system/src/cmsis/system_stm32f10x.c **** #endif 
 225              		.loc 1 267 0
 226 003a 044B     		ldr	r3, .L17+8
 227 003c 4FF00062 		mov	r2, #134217728
 228 0040 9A60     		str	r2, [r3, #8]
 269:../system/src/cmsis/system_stm32f10x.c **** 
 229              		.loc 1 269 0
 230 0042 08BD     		pop	{r3, pc}
 231              	.L18:
 232              		.align	2
 233              	.L17:
 234 0044 00100240 		.word	1073876992
 235 0048 0000FFF8 		.word	-117506048
 236 004c 00ED00E0 		.word	-536810240
 237              		.cfi_endproc
 238              	.LFE63:
 240              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 241              		.align	1
 242              		.global	SystemCoreClockUpdate
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu softvfp
 248              	SystemCoreClockUpdate:
 249              	.LFB64:
 307:../system/src/cmsis/system_stm32f10x.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0;
 250              		.loc 1 307 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255              	.LVL2:
 319:../system/src/cmsis/system_stm32f10x.c ****   
 256              		.loc 1 319 0
 257 0000 1F4B     		ldr	r3, .L30
 258 0002 5B68     		ldr	r3, [r3, #4]
 259 0004 03F00C03 		and	r3, r3, #12
 260              	.LVL3:
 321:../system/src/cmsis/system_stm32f10x.c ****   {
 261              		.loc 1 321 0
 262 0008 042B     		cmp	r3, #4
 263 000a 15D0     		beq	.L21
 264 000c 082B     		cmp	r3, #8
 265 000e 17D0     		beq	.L22
 266 0010 1BB1     		cbz	r3, .L28
 403:../system/src/cmsis/system_stm32f10x.c ****       break;
 267              		.loc 1 403 0
 268 0012 1C4B     		ldr	r3, .L30+4
 269              	.LVL4:
 270 0014 1C4A     		ldr	r2, .L30+8
 271 0016 1A60     		str	r2, [r3]
 404:../system/src/cmsis/system_stm32f10x.c ****   }
 272              		.loc 1 404 0
 273 0018 02E0     		b	.L24
 274              	.LVL5:
 275              	.L28:
 324:../system/src/cmsis/system_stm32f10x.c ****       break;
 276              		.loc 1 324 0
 277 001a 1A4B     		ldr	r3, .L30+4
 278              	.LVL6:
 279 001c 1A4A     		ldr	r2, .L30+8
 280 001e 1A60     		str	r2, [r3]
 281              	.LVL7:
 282              	.L24:
 409:../system/src/cmsis/system_stm32f10x.c ****   /* HCLK clock frequency */
 283              		.loc 1 409 0
 284 0020 174B     		ldr	r3, .L30
 285 0022 5B68     		ldr	r3, [r3, #4]
 286 0024 C3F30313 		ubfx	r3, r3, #4, #4
 287 0028 184A     		ldr	r2, .L30+12
 288 002a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 289 002c DAB2     		uxtb	r2, r3
 290              	.LVL8:
 411:../system/src/cmsis/system_stm32f10x.c **** }
 291              		.loc 1 411 0
 292 002e 1549     		ldr	r1, .L30+4
 293 0030 0B68     		ldr	r3, [r1]
 294 0032 D340     		lsrs	r3, r3, r2
 295 0034 0B60     		str	r3, [r1]
 412:../system/src/cmsis/system_stm32f10x.c **** 
 296              		.loc 1 412 0
 297 0036 7047     		bx	lr
 298              	.LVL9:
 299              	.L21:
 327:../system/src/cmsis/system_stm32f10x.c ****       break;
 300              		.loc 1 327 0
 301 0038 124B     		ldr	r3, .L30+4
 302              	.LVL10:
 303 003a 134A     		ldr	r2, .L30+8
 304 003c 1A60     		str	r2, [r3]
 328:../system/src/cmsis/system_stm32f10x.c ****     case 0x08:  /* PLL used as system clock */
 305              		.loc 1 328 0
 306 003e EFE7     		b	.L24
 307              	.LVL11:
 308              	.L22:
 332:../system/src/cmsis/system_stm32f10x.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 309              		.loc 1 332 0
 310 0040 0F4A     		ldr	r2, .L30
 311 0042 5368     		ldr	r3, [r2, #4]
 312              	.LVL12:
 333:../system/src/cmsis/system_stm32f10x.c ****       
 313              		.loc 1 333 0
 314 0044 5268     		ldr	r2, [r2, #4]
 315              	.LVL13:
 336:../system/src/cmsis/system_stm32f10x.c ****       
 316              		.loc 1 336 0
 317 0046 C3F38343 		ubfx	r3, r3, #18, #4
 318              	.LVL14:
 319 004a 0233     		adds	r3, r3, #2
 320              	.LVL15:
 338:../system/src/cmsis/system_stm32f10x.c ****       {
 321              		.loc 1 338 0
 322 004c 12F4803F 		tst	r2, #65536
 323 0050 0AD0     		beq	.L29
 351:../system/src/cmsis/system_stm32f10x.c ****         {/* HSE oscillator clock divided by 2 */
 324              		.loc 1 351 0
 325 0052 0B4A     		ldr	r2, .L30
 326              	.LVL16:
 327 0054 5268     		ldr	r2, [r2, #4]
 328 0056 12F4003F 		tst	r2, #131072
 329 005a 0BD0     		beq	.L26
 353:../system/src/cmsis/system_stm32f10x.c ****         }
 330              		.loc 1 353 0
 331 005c 0C4A     		ldr	r2, .L30+16
 332 005e 02FB03F3 		mul	r3, r2, r3
 333              	.LVL17:
 334 0062 084A     		ldr	r2, .L30+4
 335 0064 1360     		str	r3, [r2]
 336 0066 DBE7     		b	.L24
 337              	.LVL18:
 338              	.L29:
 341:../system/src/cmsis/system_stm32f10x.c ****       }
 339              		.loc 1 341 0
 340 0068 094A     		ldr	r2, .L30+16
 341              	.LVL19:
 342 006a 02FB03F3 		mul	r3, r2, r3
 343              	.LVL20:
 344 006e 054A     		ldr	r2, .L30+4
 345 0070 1360     		str	r3, [r2]
 346 0072 D5E7     		b	.L24
 347              	.LVL21:
 348              	.L26:
 357:../system/src/cmsis/system_stm32f10x.c ****         }
 349              		.loc 1 357 0
 350 0074 044A     		ldr	r2, .L30+8
 351 0076 02FB03F3 		mul	r3, r2, r3
 352              	.LVL22:
 353 007a 024A     		ldr	r2, .L30+4
 354 007c 1360     		str	r3, [r2]
 355 007e CFE7     		b	.L24
 356              	.L31:
 357              		.align	2
 358              	.L30:
 359 0080 00100240 		.word	1073876992
 360 0084 00000000 		.word	.LANCHOR0
 361 0088 00127A00 		.word	8000000
 362 008c 00000000 		.word	.LANCHOR1
 363 0090 00093D00 		.word	4000000
 364              		.cfi_endproc
 365              	.LFE64:
 367              		.global	AHBPrescTable
 368              		.global	SystemCoreClock
 369              		.section	.data.AHBPrescTable,"aw",%progbits
 370              		.align	2
 371              		.set	.LANCHOR1,. + 0
 374              	AHBPrescTable:
 375 0000 00       		.byte	0
 376 0001 00       		.byte	0
 377 0002 00       		.byte	0
 378 0003 00       		.byte	0
 379 0004 00       		.byte	0
 380 0005 00       		.byte	0
 381 0006 00       		.byte	0
 382 0007 00       		.byte	0
 383 0008 01       		.byte	1
 384 0009 02       		.byte	2
 385 000a 03       		.byte	3
 386 000b 04       		.byte	4
 387 000c 06       		.byte	6
 388 000d 07       		.byte	7
 389 000e 08       		.byte	8
 390 000f 09       		.byte	9
 391              		.section	.data.SystemCoreClock,"aw",%progbits
 392              		.align	2
 393              		.set	.LANCHOR0,. + 0
 396              	SystemCoreClock:
 397 0000 00A24A04 		.word	72000000
 398              		.text
 399              	.Letext0:
 400              		.file 2 "c:\\avr_arm\\winarm\\armgcc\\lib\\gcc\\arm-none-eabi\\7.2.1\\include\\stdint-gcc.h"
 401              		.file 3 "../system/include/cmsis/core_cm3.h"
 402              		.file 4 "../system/include/cmsis/system_stm32f10x.h"
 403              		.file 5 "../system/include/cmsis/stm32f10x.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f10x.c
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:16     .text.SetSysClockTo72:00000000 $t
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:22     .text.SetSysClockTo72:00000000 SetSysClockTo72
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:148    .text.SetSysClockTo72:000000bc $d
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:154    .text.SetSysClock:00000000 $t
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:160    .text.SetSysClock:00000000 SetSysClock
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:179    .text.SystemInit:00000000 $t
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:186    .text.SystemInit:00000000 SystemInit
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:234    .text.SystemInit:00000044 $d
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:241    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:248    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:359    .text.SystemCoreClockUpdate:00000080 $d
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:374    .data.AHBPrescTable:00000000 AHBPrescTable
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:396    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:370    .data.AHBPrescTable:00000000 $d
C:\Users\george\AppData\Local\Temp\cc1Tlr1M.s:392    .data.SystemCoreClock:00000000 $d
                           .group:00000000 wm4.0.c450a18b2a29049e2cbb4137d58ca9b1
                           .group:00000000 wm4.stm32f10x.h.51.c58ea26c5150470d52680f0bbaa7049c
                           .group:00000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:00000000 wm4.core_cm3.h.82.57a0f9dd004efa579f86574376281d2f
                           .group:00000000 wm4.cmsis_gcc.h.36.67d2dcde6a14ff518eedc1d545d89a76
                           .group:00000000 wm4.core_cm3.h.183.ecfd9c316d6f10b73648f6e579b02c8b
                           .group:00000000 wm4.stm32f10x.h.522.9a9f642c8c562acb4a63ad5d933b7c01
                           .group:00000000 wm4.stm32f10x_adc.h.89.9f2b285fa0070185d48a05b61a05798c
                           .group:00000000 wm4.stm32f10x_bkp.h.25.4622919f1e30efdad5eb44e12edd5513
                           .group:00000000 wm4.stm32f10x_can.h.25.e5e43f6bbc8fc7c8aa30ef2bc5610ced
                           .group:00000000 wm4.stm32f10x_cec.h.25.8f03450e7bbb704d96e7bc73ec0f66a7
                           .group:00000000 wm4.stm32f10x_dac.h.25.6e7f2924f39c60c10815105b99b8b446
                           .group:00000000 wm4.stm32f10x_dbgmcu.h.25.d3351200fc7f9c8615d1ae81d40db08a
                           .group:00000000 wm4.stm32f10x_dma.h.25.94e36204daa98cae5dcc70a10a9694d5
                           .group:00000000 wm4.stm32f10x_exti.h.25.f52c69aad7d1994be5b2c4e2b8f4c595
                           .group:00000000 wm4.stm32f10x_flash.h.25.4be61fcb02863962a1e006449d310650
                           .group:00000000 wm4.stm32f10x_fsmc.h.25.bca154da2699cdb6024c0c6c4fc5aa89
                           .group:00000000 wm4.stm32f10x_gpio.h.25.80c981af0e637567395034c576cfb3ce
                           .group:00000000 wm4.stm32f10x_i2c.h.25.b124ac2c620f8ebddd92b6d95ca62176
                           .group:00000000 wm4.stm32f10x_iwdg.h.25.da9374ab9856795610487f312ccf3122
                           .group:00000000 wm4.stm32f10x_pwr.h.25.37ef75009f751ef5fe27910e0bf00a62
                           .group:00000000 wm4.stm32f10x_rcc.h.25.968bcf08d813e68e57c280a4da69fa5a
                           .group:00000000 wm4.stm32f10x_rtc.h.25.361142606ba98ddcd10369f321f6e636
                           .group:00000000 wm4.stm32f10x_sdio.h.25.fb0db079f5c1412c40f359319f7c40b0
                           .group:00000000 wm4.stm32f10x_spi.h.25.3f6dfa4abe177efb3c6f5a717c06b323
                           .group:00000000 wm4.stm32f10x_tim.h.25.f709106ba77b314e6b070693f89f3c56
                           .group:00000000 wm4.stm32f10x_usart.h.25.2e65e396239d0cc41fd0bf6faa2a32cb
                           .group:00000000 wm4.stm32f10x_wwdg.h.25.dde12201d86b5aa9ecaafb5eccdc6549
                           .group:00000000 wm4.misc.h.25.068e106f368fa5369a681ef57c106f4b
                           .group:00000000 wm4.stm32f10x.h.8317.9a8e476d96d33bb2df9a9ad0775bd4a7

NO UNDEFINED SYMBOLS
