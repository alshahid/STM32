   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ESP_program.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.ESP_u8CheckResponse,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	ESP_u8CheckResponse:
  23              	.LFB1:
  24              		.file 1 "../src/ESP_program.c"
   1:../src/ESP_program.c **** /*****************************************************************************************/
   2:../src/ESP_program.c **** /* Author : George Ghoubrial                                                             */
   3:../src/ESP_program.c **** /* Date   : 03 OCT 2020                                                                  */
   4:../src/ESP_program.c **** /* Verson : V01                                                                          */
   5:../src/ESP_program.c **** /*****************************************************************************************/
   6:../src/ESP_program.c **** #include "STD_TYPES.h"
   7:../src/ESP_program.c **** #include "BIT_MATH.h"
   8:../src/ESP_program.c **** 
   9:../src/ESP_program.c **** #include "USART_interface.h"
  10:../src/ESP_program.c **** #include "STK_interface.h"
  11:../src/ESP_program.c **** 
  12:../src/ESP_program.c **** #include "ESP_interface.h"
  13:../src/ESP_program.c **** #include "ESP_private.h"
  14:../src/ESP_program.c **** #include "ESP_config.h"
  15:../src/ESP_program.c **** 
  16:../src/ESP_program.c **** static u8 ESP_u8CheckResponse(void);
  17:../src/ESP_program.c **** 
  18:../src/ESP_program.c **** void ESP_voidInit(void)
  19:../src/ESP_program.c **** {
  20:../src/ESP_program.c **** 
  21:../src/ESP_program.c **** 	u8 local_u8Result = 0;
  22:../src/ESP_program.c **** 	u8 count = 0;
  23:../src/ESP_program.c **** 	while(local_u8Result != 1 && count < 3)
  24:../src/ESP_program.c **** 	{
  25:../src/ESP_program.c **** 		/* disable ecco */
  26:../src/ESP_program.c **** 		USART1_voidSendString("ATE0\r\n");
  27:../src/ESP_program.c **** 		local_u8Result=ESP_u8CheckResponse();
  28:../src/ESP_program.c **** 		count++;
  29:../src/ESP_program.c **** 	}
  30:../src/ESP_program.c **** 	count = 0;
  31:../src/ESP_program.c **** 	local_u8Result = 0;
  32:../src/ESP_program.c **** 
  33:../src/ESP_program.c **** 	while(local_u8Result != 1 && count < 3)
  34:../src/ESP_program.c **** 	{
  35:../src/ESP_program.c **** 		/* select wifi mode */
  36:../src/ESP_program.c **** 		USART1_voidSendString("AT+CWMODE=1\r\n");
  37:../src/ESP_program.c **** 		local_u8Result=ESP_u8CheckResponse();
  38:../src/ESP_program.c **** 		count++;
  39:../src/ESP_program.c **** 	}
  40:../src/ESP_program.c **** }
  41:../src/ESP_program.c **** 
  42:../src/ESP_program.c **** static u8 ESP_u8CheckResponse(void)
  43:../src/ESP_program.c **** {
  25              		.loc 1 43 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 64
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 10B5     		push	{r4, lr}
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  33 0002 90B0     		sub	sp, sp, #64
  34              		.cfi_def_cfa_offset 72
  35              	.LVL0:
  44:../src/ESP_program.c **** 	u8 i=0;
  45:../src/ESP_program.c **** 	u8 local_u8Response[60]={0};
  36              		.loc 1 45 0
  37 0004 3C22     		movs	r2, #60
  38 0006 0021     		movs	r1, #0
  39 0008 01A8     		add	r0, sp, #4
  40 000a FFF7FEFF 		bl	memset
  41              	.LVL1:
  46:../src/ESP_program.c **** 	u8 local_u8Result = 0;
  47:../src/ESP_program.c **** 
  48:../src/ESP_program.c **** 	/* put response in array */
  49:../src/ESP_program.c **** 	local_u8Response[i] = USART1_u8ReceiveByte();
  42              		.loc 1 49 0
  43 000e FFF7FEFF 		bl	USART1_u8ReceiveByte
  44              	.LVL2:
  45 0012 8DF80400 		strb	r0, [sp, #4]
  44:../src/ESP_program.c **** 	u8 i=0;
  46              		.loc 1 44 0
  47 0016 0024     		movs	r4, #0
  50:../src/ESP_program.c **** 	while(local_u8Response[i] != 255)
  48              		.loc 1 50 0
  49 0018 07E0     		b	.L2
  50              	.LVL3:
  51              	.L3:
  51:../src/ESP_program.c **** 	{
  52:../src/ESP_program.c **** 		i++;
  52              		.loc 1 52 0
  53 001a 0134     		adds	r4, r4, #1
  54              	.LVL4:
  55 001c E4B2     		uxtb	r4, r4
  56              	.LVL5:
  53:../src/ESP_program.c **** 		local_u8Response[i] = USART1_u8ReceiveByte();
  57              		.loc 1 53 0
  58 001e FFF7FEFF 		bl	USART1_u8ReceiveByte
  59              	.LVL6:
  60 0022 10AB     		add	r3, sp, #64
  61 0024 2344     		add	r3, r3, r4
  62 0026 03F83C0C 		strb	r0, [r3, #-60]
  63              	.LVL7:
  64              	.L2:
  50:../src/ESP_program.c **** 	while(local_u8Response[i] != 255)
  65              		.loc 1 50 0
  66 002a 10AB     		add	r3, sp, #64
  67 002c 2344     		add	r3, r3, r4
  68 002e 13F83C3C 		ldrb	r3, [r3, #-60]	@ zero_extendqisi2
  69 0032 FF2B     		cmp	r3, #255
  70 0034 F1D1     		bne	.L3
  54:../src/ESP_program.c **** 	}
  55:../src/ESP_program.c **** 
  56:../src/ESP_program.c **** 	/* check OK */
  57:../src/ESP_program.c **** 	if(local_u8Response[2] == 'O' && local_u8Response[3] == 'K')      /* for command:ATE0 */
  71              		.loc 1 57 0
  72 0036 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
  73 003a 4F2B     		cmp	r3, #79
  74 003c 0ED0     		beq	.L14
  75              	.L4:
  58:../src/ESP_program.c **** 	{
  59:../src/ESP_program.c **** 		local_u8Result = 1;
  60:../src/ESP_program.c **** 	}
  61:../src/ESP_program.c **** 	else if(local_u8Response[3] == 'O' && local_u8Response[4] == 'K')   /* for command:AT+CWMODE=1 */
  76              		.loc 1 61 0
  77 003e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
  78 0042 4F2B     		cmp	r3, #79
  79 0044 10D0     		beq	.L15
  80              	.L6:
  62:../src/ESP_program.c **** 	{
  63:../src/ESP_program.c **** 		local_u8Result = 1;
  64:../src/ESP_program.c **** 	}
  65:../src/ESP_program.c **** 	else if(local_u8Response[12] == 'O' && local_u8Response[13] == 'K') /* for command: AT+CIPSTART an
  81              		.loc 1 65 0
  82 0046 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
  83 004a 4F2B     		cmp	r3, #79
  84 004c 12D0     		beq	.L16
  85              	.L7:
  66:../src/ESP_program.c **** 	{
  67:../src/ESP_program.c **** 		local_u8Result = 1;
  68:../src/ESP_program.c **** 	}
  69:../src/ESP_program.c **** 	else if(local_u8Response[24] == 'O' && local_u8Response[25] == 'K') /* for command: GET http://iot
  86              		.loc 1 69 0
  87 004e 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
  88 0052 4F2B     		cmp	r3, #79
  89 0054 14D0     		beq	.L17
  46:../src/ESP_program.c **** 
  90              		.loc 1 46 0
  91 0056 0020     		movs	r0, #0
  92              	.L5:
  93              	.LVL8:
  70:../src/ESP_program.c **** 	{
  71:../src/ESP_program.c **** 		local_u8Result = 1;
  72:../src/ESP_program.c **** 	}
  73:../src/ESP_program.c **** 	return local_u8Result;
  74:../src/ESP_program.c **** }
  94              		.loc 1 74 0
  95 0058 10B0     		add	sp, sp, #64
  96              		.cfi_remember_state
  97              		.cfi_def_cfa_offset 8
  98              		@ sp needed
  99 005a 10BD     		pop	{r4, pc}
 100              	.LVL9:
 101              	.L14:
 102              		.cfi_restore_state
  57:../src/ESP_program.c **** 	{
 103              		.loc 1 57 0 discriminator 1
 104 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 105 0060 4B2B     		cmp	r3, #75
 106 0062 ECD1     		bne	.L4
  59:../src/ESP_program.c **** 	}
 107              		.loc 1 59 0
 108 0064 0120     		movs	r0, #1
 109 0066 F7E7     		b	.L5
 110              	.L15:
  61:../src/ESP_program.c **** 	{
 111              		.loc 1 61 0 discriminator 1
 112 0068 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 113 006c 4B2B     		cmp	r3, #75
 114 006e EAD1     		bne	.L6
  63:../src/ESP_program.c **** 	}
 115              		.loc 1 63 0
 116 0070 0120     		movs	r0, #1
 117 0072 F1E7     		b	.L5
 118              	.L16:
  65:../src/ESP_program.c **** 	{
 119              		.loc 1 65 0 discriminator 1
 120 0074 9DF81130 		ldrb	r3, [sp, #17]	@ zero_extendqisi2
 121 0078 4B2B     		cmp	r3, #75
 122 007a E8D1     		bne	.L7
  67:../src/ESP_program.c **** 	}
 123              		.loc 1 67 0
 124 007c 0120     		movs	r0, #1
 125 007e EBE7     		b	.L5
 126              	.L17:
  69:../src/ESP_program.c **** 	{
 127              		.loc 1 69 0 discriminator 1
 128 0080 9DF81D30 		ldrb	r3, [sp, #29]	@ zero_extendqisi2
 129 0084 4B2B     		cmp	r3, #75
 130 0086 01D0     		beq	.L12
  46:../src/ESP_program.c **** 
 131              		.loc 1 46 0
 132 0088 0020     		movs	r0, #0
 133 008a E5E7     		b	.L5
 134              	.L12:
  71:../src/ESP_program.c **** 	}
 135              		.loc 1 71 0
 136 008c 0120     		movs	r0, #1
 137 008e E3E7     		b	.L5
 138              		.cfi_endproc
 139              	.LFE1:
 141              		.section	.text.ESP_voidInit,"ax",%progbits
 142              		.align	1
 143              		.global	ESP_voidInit
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu softvfp
 149              	ESP_voidInit:
 150              	.LFB0:
  19:../src/ESP_program.c **** 
 151              		.loc 1 19 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155 0000 10B5     		push	{r4, lr}
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 4, -8
 158              		.cfi_offset 14, -4
 159              	.LVL10:
  22:../src/ESP_program.c **** 	while(local_u8Result != 1 && count < 3)
 160              		.loc 1 22 0
 161 0002 0024     		movs	r4, #0
  21:../src/ESP_program.c **** 	u8 count = 0;
 162              		.loc 1 21 0
 163 0004 2046     		mov	r0, r4
  23:../src/ESP_program.c **** 	{
 164              		.loc 1 23 0
 165 0006 06E0     		b	.L19
 166              	.LVL11:
 167              	.L21:
  26:../src/ESP_program.c **** 		local_u8Result=ESP_u8CheckResponse();
 168              		.loc 1 26 0
 169 0008 0E48     		ldr	r0, .L27
 170              	.LVL12:
 171 000a FFF7FEFF 		bl	USART1_voidSendString
 172              	.LVL13:
  27:../src/ESP_program.c **** 		count++;
 173              		.loc 1 27 0
 174 000e FFF7FEFF 		bl	ESP_u8CheckResponse
 175              	.LVL14:
  28:../src/ESP_program.c **** 	}
 176              		.loc 1 28 0
 177 0012 0134     		adds	r4, r4, #1
 178              	.LVL15:
 179 0014 E4B2     		uxtb	r4, r4
 180              	.LVL16:
 181              	.L19:
  23:../src/ESP_program.c **** 	{
 182              		.loc 1 23 0
 183 0016 0128     		cmp	r0, #1
 184 0018 0FD0     		beq	.L25
  23:../src/ESP_program.c **** 	{
 185              		.loc 1 23 0 is_stmt 0 discriminator 1
 186 001a 022C     		cmp	r4, #2
 187 001c F4D9     		bls	.L21
 188 001e 0024     		movs	r4, #0
 189              	.LVL17:
 190 0020 2046     		mov	r0, r4
 191              	.LVL18:
 192              	.L22:
  33:../src/ESP_program.c **** 	{
 193              		.loc 1 33 0 is_stmt 1
 194 0022 0128     		cmp	r0, #1
 195 0024 0CD0     		beq	.L18
  33:../src/ESP_program.c **** 	{
 196              		.loc 1 33 0 is_stmt 0 discriminator 1
 197 0026 022C     		cmp	r4, #2
 198 0028 0AD8     		bhi	.L18
  36:../src/ESP_program.c **** 		local_u8Result=ESP_u8CheckResponse();
 199              		.loc 1 36 0 is_stmt 1
 200 002a 0748     		ldr	r0, .L27+4
 201              	.LVL19:
 202 002c FFF7FEFF 		bl	USART1_voidSendString
 203              	.LVL20:
  37:../src/ESP_program.c **** 		count++;
 204              		.loc 1 37 0
 205 0030 FFF7FEFF 		bl	ESP_u8CheckResponse
 206              	.LVL21:
  38:../src/ESP_program.c **** 	}
 207              		.loc 1 38 0
 208 0034 0134     		adds	r4, r4, #1
 209              	.LVL22:
 210 0036 E4B2     		uxtb	r4, r4
 211              	.LVL23:
 212 0038 F3E7     		b	.L22
 213              	.L25:
 214 003a 0024     		movs	r4, #0
 215              	.LVL24:
 216 003c 2046     		mov	r0, r4
 217              	.LVL25:
 218 003e F0E7     		b	.L22
 219              	.LVL26:
 220              	.L18:
  40:../src/ESP_program.c **** 
 221              		.loc 1 40 0
 222 0040 10BD     		pop	{r4, pc}
 223              	.LVL27:
 224              	.L28:
 225 0042 00BF     		.align	2
 226              	.L27:
 227 0044 00000000 		.word	.LC0
 228 0048 08000000 		.word	.LC1
 229              		.cfi_endproc
 230              	.LFE0:
 232              		.section	.text.ESP_voidConnectToWIFI,"ax",%progbits
 233              		.align	1
 234              		.global	ESP_voidConnectToWIFI
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu softvfp
 240              	ESP_voidConnectToWIFI:
 241              	.LFB2:
  75:../src/ESP_program.c **** 
  76:../src/ESP_program.c **** void ESP_voidConnectToWIFI(u8 *copy_u8Name ,u8 *copy_u8Password)
  77:../src/ESP_program.c **** {
 242              		.loc 1 77 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 104
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              	.LVL28:
 247 0000 70B5     		push	{r4, r5, r6, lr}
 248              		.cfi_def_cfa_offset 16
 249              		.cfi_offset 4, -16
 250              		.cfi_offset 5, -12
 251              		.cfi_offset 6, -8
 252              		.cfi_offset 14, -4
 253 0002 9AB0     		sub	sp, sp, #104
 254              		.cfi_def_cfa_offset 120
 255 0004 0546     		mov	r5, r0
 256 0006 0C46     		mov	r4, r1
 257              	.LVL29:
  78:../src/ESP_program.c **** 	u8 i = 0;
  79:../src/ESP_program.c **** 	u8 j = 0;
  80:../src/ESP_program.c **** 	u8 command[100]={"AT+CWJAP_CUR="};
 258              		.loc 1 80 0
 259 0008 2F4B     		ldr	r3, .L35
 260 000a 01AE     		add	r6, sp, #4
 261 000c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 262              	.LVL30:
 263 000e 07C6     		stmia	r6!, {r0, r1, r2}
 264 0010 3380     		strh	r3, [r6]	@ movhi
 265 0012 5622     		movs	r2, #86
 266 0014 0021     		movs	r1, #0
 267 0016 0DF11200 		add	r0, sp, #18
 268 001a FFF7FEFF 		bl	memset
 269              	.LVL31:
  81:../src/ESP_program.c **** 
  82:../src/ESP_program.c **** 	command[13]='"';
 270              		.loc 1 82 0
 271 001e 2223     		movs	r3, #34
 272 0020 8DF81130 		strb	r3, [sp, #17]
  78:../src/ESP_program.c **** 	u8 i = 0;
 273              		.loc 1 78 0
 274 0024 0023     		movs	r3, #0
  83:../src/ESP_program.c **** 	while(copy_u8Name[i] != '\0')
 275              		.loc 1 83 0
 276 0026 07E0     		b	.L30
 277              	.LVL32:
 278              	.L31:
  84:../src/ESP_program.c **** 	{
  85:../src/ESP_program.c **** 		command[14+i]=copy_u8Name[i];
 279              		.loc 1 85 0
 280 0028 03F10E02 		add	r2, r3, #14
 281 002c 1AA9     		add	r1, sp, #104
 282 002e 0A44     		add	r2, r2, r1
 283 0030 02F8640C 		strb	r0, [r2, #-100]
  86:../src/ESP_program.c **** 		i++;
 284              		.loc 1 86 0
 285 0034 0133     		adds	r3, r3, #1
 286              	.LVL33:
 287 0036 DBB2     		uxtb	r3, r3
 288              	.LVL34:
 289              	.L30:
  83:../src/ESP_program.c **** 	while(copy_u8Name[i] != '\0')
 290              		.loc 1 83 0
 291 0038 E85C     		ldrb	r0, [r5, r3]	@ zero_extendqisi2
 292 003a 0028     		cmp	r0, #0
 293 003c F4D1     		bne	.L31
  87:../src/ESP_program.c **** 	}
  88:../src/ESP_program.c **** 	command[14+i]='"';
 294              		.loc 1 88 0
 295 003e 03F10E02 		add	r2, r3, #14
 296 0042 1AA9     		add	r1, sp, #104
 297 0044 0A44     		add	r2, r2, r1
 298 0046 2221     		movs	r1, #34
 299 0048 02F8641C 		strb	r1, [r2, #-100]
  89:../src/ESP_program.c **** 	i++;
 300              		.loc 1 89 0
 301 004c 5A1C     		adds	r2, r3, #1
 302 004e D2B2     		uxtb	r2, r2
 303              	.LVL35:
  90:../src/ESP_program.c **** 	command[14+i]=',';
 304              		.loc 1 90 0
 305 0050 0E32     		adds	r2, r2, #14
 306              	.LVL36:
 307 0052 1AAD     		add	r5, sp, #104
 308              	.LVL37:
 309 0054 2A44     		add	r2, r2, r5
 310              	.LVL38:
 311 0056 2C25     		movs	r5, #44
 312 0058 02F8645C 		strb	r5, [r2, #-100]
  91:../src/ESP_program.c **** 	i++;
 313              		.loc 1 91 0
 314 005c 9A1C     		adds	r2, r3, #2
 315 005e D2B2     		uxtb	r2, r2
 316              	.LVL39:
  92:../src/ESP_program.c **** 	command[14+i]='"';
 317              		.loc 1 92 0
 318 0060 0E32     		adds	r2, r2, #14
 319              	.LVL40:
 320 0062 1AAD     		add	r5, sp, #104
 321 0064 2A44     		add	r2, r2, r5
 322              	.LVL41:
 323 0066 02F8641C 		strb	r1, [r2, #-100]
  93:../src/ESP_program.c **** 	i++;
 324              		.loc 1 93 0
 325 006a 0333     		adds	r3, r3, #3
 326              	.LVL42:
 327 006c DBB2     		uxtb	r3, r3
 328              	.LVL43:
  94:../src/ESP_program.c **** 
  95:../src/ESP_program.c **** 	while(copy_u8Password[j] != '\0')
 329              		.loc 1 95 0
 330 006e 09E0     		b	.L32
 331              	.LVL44:
 332              	.L33:
  96:../src/ESP_program.c **** 	{
  97:../src/ESP_program.c **** 		command[14+i]=copy_u8Password[j];
 333              		.loc 1 97 0
 334 0070 03F10E02 		add	r2, r3, #14
 335 0074 1AAD     		add	r5, sp, #104
 336 0076 2A44     		add	r2, r2, r5
 337 0078 02F8641C 		strb	r1, [r2, #-100]
  98:../src/ESP_program.c **** 		i++;
 338              		.loc 1 98 0
 339 007c 0133     		adds	r3, r3, #1
 340              	.LVL45:
 341 007e DBB2     		uxtb	r3, r3
 342              	.LVL46:
  99:../src/ESP_program.c **** 		j++;
 343              		.loc 1 99 0
 344 0080 421C     		adds	r2, r0, #1
 345 0082 D0B2     		uxtb	r0, r2
 346              	.LVL47:
 347              	.L32:
  95:../src/ESP_program.c **** 	{
 348              		.loc 1 95 0
 349 0084 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 350 0086 0029     		cmp	r1, #0
 351 0088 F2D1     		bne	.L33
 100:../src/ESP_program.c **** 	}
 101:../src/ESP_program.c **** 	command[14+i]='"';
 352              		.loc 1 101 0
 353 008a 03F10E02 		add	r2, r3, #14
 354 008e 1AA9     		add	r1, sp, #104
 355 0090 0A44     		add	r2, r2, r1
 356 0092 2221     		movs	r1, #34
 357 0094 02F8641C 		strb	r1, [r2, #-100]
 102:../src/ESP_program.c **** 	i++;
 358              		.loc 1 102 0
 359 0098 5A1C     		adds	r2, r3, #1
 360 009a D2B2     		uxtb	r2, r2
 361              	.LVL48:
 103:../src/ESP_program.c **** 	command[14+i]='\r';
 362              		.loc 1 103 0
 363 009c 0E32     		adds	r2, r2, #14
 364              	.LVL49:
 365 009e 1AA9     		add	r1, sp, #104
 366 00a0 0A44     		add	r2, r2, r1
 367              	.LVL50:
 368 00a2 0D21     		movs	r1, #13
 369 00a4 02F8641C 		strb	r1, [r2, #-100]
 104:../src/ESP_program.c **** 	i++;
 370              		.loc 1 104 0
 371 00a8 0233     		adds	r3, r3, #2
 372              	.LVL51:
 373 00aa DBB2     		uxtb	r3, r3
 374              	.LVL52:
 105:../src/ESP_program.c **** 	command[14+i]='\n';
 375              		.loc 1 105 0
 376 00ac 0E33     		adds	r3, r3, #14
 377              	.LVL53:
 378 00ae 1AAA     		add	r2, sp, #104
 379 00b0 1344     		add	r3, r3, r2
 380              	.LVL54:
 381 00b2 0A22     		movs	r2, #10
 382 00b4 03F8642C 		strb	r2, [r3, #-100]
 106:../src/ESP_program.c **** 
 107:../src/ESP_program.c **** 	USART1_voidSendString(command);
 383              		.loc 1 107 0
 384 00b8 01A8     		add	r0, sp, #4
 385              	.LVL55:
 386 00ba FFF7FEFF 		bl	USART1_voidSendString
 387              	.LVL56:
 108:../src/ESP_program.c **** 	STK_voidSetBusyWait(7000000);
 388              		.loc 1 108 0
 389 00be 0348     		ldr	r0, .L35+4
 390 00c0 FFF7FEFF 		bl	STK_voidSetBusyWait
 391              	.LVL57:
 109:../src/ESP_program.c **** 
 110:../src/ESP_program.c **** }
 392              		.loc 1 110 0
 393 00c4 1AB0     		add	sp, sp, #104
 394              		.cfi_def_cfa_offset 16
 395              		@ sp needed
 396 00c6 70BD     		pop	{r4, r5, r6, pc}
 397              	.LVL58:
 398              	.L36:
 399              		.align	2
 400              	.L35:
 401 00c8 00000000 		.word	.LANCHOR0
 402 00cc C0CF6A00 		.word	7000000
 403              		.cfi_endproc
 404              	.LFE2:
 406              		.section	.text.ESP_voidConnectToServer,"ax",%progbits
 407              		.align	1
 408              		.global	ESP_voidConnectToServer
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu softvfp
 414              	ESP_voidConnectToServer:
 415              	.LFB3:
 111:../src/ESP_program.c **** 
 112:../src/ESP_program.c **** void ESP_voidConnectToServer(u8 *copy_u8IP, u8 *copy_returnedData)
 113:../src/ESP_program.c **** {
 416              		.loc 1 113 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 104
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              	.LVL59:
 421 0000 70B5     		push	{r4, r5, r6, lr}
 422              		.cfi_def_cfa_offset 16
 423              		.cfi_offset 4, -16
 424              		.cfi_offset 5, -12
 425              		.cfi_offset 6, -8
 426              		.cfi_offset 14, -4
 427 0002 9AB0     		sub	sp, sp, #104
 428              		.cfi_def_cfa_offset 120
 429 0004 0646     		mov	r6, r0
 430 0006 0D46     		mov	r5, r1
 431              	.LVL60:
 114:../src/ESP_program.c **** 	u8 i=0;
 115:../src/ESP_program.c **** 	u8 command[100] = {"AT+CIPSTART="};
 432              		.loc 1 115 0
 433 0008 01AC     		add	r4, sp, #4
 434 000a 444B     		ldr	r3, .L50
 435 000c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 436              	.LVL61:
 437 000e 07C4     		stmia	r4!, {r0, r1, r2}
 438 0010 5722     		movs	r2, #87
 439 0012 0021     		movs	r1, #0
 440 0014 0DF11100 		add	r0, sp, #17
 441 0018 FFF7FEFF 		bl	memset
 442              	.LVL62:
 116:../src/ESP_program.c **** 	command[12]='"';
 443              		.loc 1 116 0
 444 001c 2223     		movs	r3, #34
 445 001e 8DF81030 		strb	r3, [sp, #16]
 117:../src/ESP_program.c **** 	command[13]='T';
 446              		.loc 1 117 0
 447 0022 5422     		movs	r2, #84
 448 0024 8DF81120 		strb	r2, [sp, #17]
 118:../src/ESP_program.c **** 	command[14]='C';
 449              		.loc 1 118 0
 450 0028 4322     		movs	r2, #67
 451 002a 8DF81220 		strb	r2, [sp, #18]
 119:../src/ESP_program.c **** 	command[15]='P';
 452              		.loc 1 119 0
 453 002e 5022     		movs	r2, #80
 454 0030 8DF81320 		strb	r2, [sp, #19]
 120:../src/ESP_program.c **** 	command[16]='"';
 455              		.loc 1 120 0
 456 0034 8DF81430 		strb	r3, [sp, #20]
 121:../src/ESP_program.c **** 	command[17]=',';
 457              		.loc 1 121 0
 458 0038 2C22     		movs	r2, #44
 459 003a 8DF81520 		strb	r2, [sp, #21]
 122:../src/ESP_program.c **** 	command[18]='"';
 460              		.loc 1 122 0
 461 003e 8DF81630 		strb	r3, [sp, #22]
 114:../src/ESP_program.c **** 	u8 command[100] = {"AT+CIPSTART="};
 462              		.loc 1 114 0
 463 0042 0023     		movs	r3, #0
 123:../src/ESP_program.c **** 	while(copy_u8IP[i] != '\0')
 464              		.loc 1 123 0
 465 0044 07E0     		b	.L38
 466              	.LVL63:
 467              	.L39:
 124:../src/ESP_program.c **** 	{
 125:../src/ESP_program.c **** 		command[19+i]=copy_u8IP[i];
 468              		.loc 1 125 0
 469 0046 03F11302 		add	r2, r3, #19
 470 004a 1AA9     		add	r1, sp, #104
 471 004c 0A44     		add	r2, r2, r1
 472 004e 02F8644C 		strb	r4, [r2, #-100]
 126:../src/ESP_program.c **** 		i++;
 473              		.loc 1 126 0
 474 0052 0133     		adds	r3, r3, #1
 475              	.LVL64:
 476 0054 DBB2     		uxtb	r3, r3
 477              	.LVL65:
 478              	.L38:
 123:../src/ESP_program.c **** 	while(copy_u8IP[i] != '\0')
 479              		.loc 1 123 0
 480 0056 F45C     		ldrb	r4, [r6, r3]	@ zero_extendqisi2
 481 0058 002C     		cmp	r4, #0
 482 005a F4D1     		bne	.L39
 127:../src/ESP_program.c **** 	}
 128:../src/ESP_program.c **** 	command[19+i]='"';
 483              		.loc 1 128 0
 484 005c 03F11302 		add	r2, r3, #19
 485 0060 1AA9     		add	r1, sp, #104
 486 0062 0A44     		add	r2, r2, r1
 487 0064 2221     		movs	r1, #34
 488 0066 02F8641C 		strb	r1, [r2, #-100]
 129:../src/ESP_program.c **** 	i++;
 489              		.loc 1 129 0
 490 006a 5A1C     		adds	r2, r3, #1
 491 006c D2B2     		uxtb	r2, r2
 492              	.LVL66:
 130:../src/ESP_program.c **** 	command[19+i]=',';
 493              		.loc 1 130 0
 494 006e 1332     		adds	r2, r2, #19
 495              	.LVL67:
 496 0070 1AA9     		add	r1, sp, #104
 497 0072 0A44     		add	r2, r2, r1
 498              	.LVL68:
 499 0074 2C21     		movs	r1, #44
 500 0076 02F8641C 		strb	r1, [r2, #-100]
 131:../src/ESP_program.c **** 	i++;
 501              		.loc 1 131 0
 502 007a 9A1C     		adds	r2, r3, #2
 503 007c D2B2     		uxtb	r2, r2
 504              	.LVL69:
 132:../src/ESP_program.c **** 	command[19+i]='8';
 505              		.loc 1 132 0
 506 007e 1332     		adds	r2, r2, #19
 507              	.LVL70:
 508 0080 1AA9     		add	r1, sp, #104
 509 0082 0A44     		add	r2, r2, r1
 510              	.LVL71:
 511 0084 3821     		movs	r1, #56
 512 0086 02F8641C 		strb	r1, [r2, #-100]
 133:../src/ESP_program.c **** 	i++;
 513              		.loc 1 133 0
 514 008a DA1C     		adds	r2, r3, #3
 515 008c D2B2     		uxtb	r2, r2
 516              	.LVL72:
 134:../src/ESP_program.c **** 	command[19+i]='0';
 517              		.loc 1 134 0
 518 008e 1332     		adds	r2, r2, #19
 519              	.LVL73:
 520 0090 1AA9     		add	r1, sp, #104
 521 0092 0A44     		add	r2, r2, r1
 522              	.LVL74:
 523 0094 3021     		movs	r1, #48
 524 0096 02F8641C 		strb	r1, [r2, #-100]
 135:../src/ESP_program.c **** 	i++;
 525              		.loc 1 135 0
 526 009a 1A1D     		adds	r2, r3, #4
 527 009c D2B2     		uxtb	r2, r2
 528              	.LVL75:
 136:../src/ESP_program.c **** 	command[19+i]='\r';
 529              		.loc 1 136 0
 530 009e 1332     		adds	r2, r2, #19
 531              	.LVL76:
 532 00a0 1AA9     		add	r1, sp, #104
 533 00a2 0A44     		add	r2, r2, r1
 534              	.LVL77:
 535 00a4 0D21     		movs	r1, #13
 536 00a6 02F8641C 		strb	r1, [r2, #-100]
 137:../src/ESP_program.c **** 	i++;
 537              		.loc 1 137 0
 538 00aa 0533     		adds	r3, r3, #5
 539              	.LVL78:
 540 00ac DBB2     		uxtb	r3, r3
 541              	.LVL79:
 138:../src/ESP_program.c **** 	command[19+i]='\n';
 542              		.loc 1 138 0
 543 00ae 1333     		adds	r3, r3, #19
 544              	.LVL80:
 545 00b0 1AAA     		add	r2, sp, #104
 546 00b2 1344     		add	r3, r3, r2
 547              	.LVL81:
 548 00b4 0A22     		movs	r2, #10
 549 00b6 03F8642C 		strb	r2, [r3, #-100]
 550              	.LVL82:
 139:../src/ESP_program.c **** 
 140:../src/ESP_program.c **** 	u8 local_u8Result = 0;
 141:../src/ESP_program.c **** 	u8 count = 0;
 551              		.loc 1 141 0
 552 00ba 2646     		mov	r6, r4
 553              	.LVL83:
 140:../src/ESP_program.c **** 	u8 count = 0;
 554              		.loc 1 140 0
 555 00bc 2046     		mov	r0, r4
 142:../src/ESP_program.c **** 	while(local_u8Result != 1 && count < 3)
 556              		.loc 1 142 0
 557 00be 06E0     		b	.L40
 558              	.LVL84:
 559              	.L42:
 143:../src/ESP_program.c **** 	{
 144:../src/ESP_program.c **** 		/* disable ecco */
 145:../src/ESP_program.c **** 		USART1_voidSendString(command);
 560              		.loc 1 145 0
 561 00c0 01A8     		add	r0, sp, #4
 562              	.LVL85:
 563 00c2 FFF7FEFF 		bl	USART1_voidSendString
 564              	.LVL86:
 146:../src/ESP_program.c **** 		local_u8Result=ESP_u8CheckResponse();
 565              		.loc 1 146 0
 566 00c6 FFF7FEFF 		bl	ESP_u8CheckResponse
 567              	.LVL87:
 147:../src/ESP_program.c **** 		count++;
 568              		.loc 1 147 0
 569 00ca 0136     		adds	r6, r6, #1
 570              	.LVL88:
 571 00cc F6B2     		uxtb	r6, r6
 572              	.LVL89:
 573              	.L40:
 142:../src/ESP_program.c **** 	{
 574              		.loc 1 142 0
 575 00ce 0128     		cmp	r0, #1
 576 00d0 16D0     		beq	.L48
 142:../src/ESP_program.c **** 	{
 577              		.loc 1 142 0 is_stmt 0 discriminator 1
 578 00d2 022E     		cmp	r6, #2
 579 00d4 F4D9     		bls	.L42
 580 00d6 2646     		mov	r6, r4
 581              	.LVL90:
 582 00d8 2046     		mov	r0, r4
 583              	.LVL91:
 584 00da 06E0     		b	.L43
 585              	.LVL92:
 586              	.L45:
 148:../src/ESP_program.c **** 	}
 149:../src/ESP_program.c **** 
 150:../src/ESP_program.c **** 
 151:../src/ESP_program.c **** 
 152:../src/ESP_program.c **** 
 153:../src/ESP_program.c **** 	local_u8Result = 0;
 154:../src/ESP_program.c **** 	count = 0;
 155:../src/ESP_program.c **** 	while(local_u8Result != 1 && count < 3)
 156:../src/ESP_program.c **** 	{
 157:../src/ESP_program.c **** 		/* disable ecco */
 158:../src/ESP_program.c **** 		USART1_voidSendString("AT+CIPSEND=39\r\n");
 587              		.loc 1 158 0 is_stmt 1
 588 00dc 1048     		ldr	r0, .L50+4
 589              	.LVL93:
 590 00de FFF7FEFF 		bl	USART1_voidSendString
 591              	.LVL94:
 159:../src/ESP_program.c **** 		local_u8Result=ESP_u8CheckResponse();
 592              		.loc 1 159 0
 593 00e2 FFF7FEFF 		bl	ESP_u8CheckResponse
 594              	.LVL95:
 160:../src/ESP_program.c **** 		count++;
 595              		.loc 1 160 0
 596 00e6 0136     		adds	r6, r6, #1
 597              	.LVL96:
 598 00e8 F6B2     		uxtb	r6, r6
 599              	.LVL97:
 600              	.L43:
 155:../src/ESP_program.c **** 	{
 601              		.loc 1 155 0
 602 00ea 0128     		cmp	r0, #1
 603 00ec 01D0     		beq	.L44
 155:../src/ESP_program.c **** 	{
 604              		.loc 1 155 0 is_stmt 0 discriminator 1
 605 00ee 022E     		cmp	r6, #2
 606 00f0 F4D9     		bls	.L45
 607              	.L44:
 608              	.LVL98:
 161:../src/ESP_program.c **** 	}
 162:../src/ESP_program.c **** 
 163:../src/ESP_program.c **** #if(0)
 164:../src/ESP_program.c **** 
 165:../src/ESP_program.c **** 	local_u8Result = 0;
 166:../src/ESP_program.c **** 	count = 0;
 167:../src/ESP_program.c **** 	while(local_u8Result != 1 && count < 3)
 168:../src/ESP_program.c **** 	{
 169:../src/ESP_program.c **** 		/* disable ecco */
 170:../src/ESP_program.c **** 		USART1_voidSendString("GET http://iot.freeoda.com/status.txt\r\n");
 171:../src/ESP_program.c **** 		local_u8Result=ESP_u8CheckResponse();
 172:../src/ESP_program.c **** 		count++;
 173:../src/ESP_program.c **** 	}
 174:../src/ESP_program.c **** #endif
 175:../src/ESP_program.c **** 	/* put response in array */
 176:../src/ESP_program.c **** 	i=0;
 177:../src/ESP_program.c **** 	USART1_voidSendString("GET http://iot.freeoda.com/status.txt\r\n");
 609              		.loc 1 177 0 is_stmt 1
 610 00f2 0C48     		ldr	r0, .L50+8
 611              	.LVL99:
 612 00f4 FFF7FEFF 		bl	USART1_voidSendString
 613              	.LVL100:
 178:../src/ESP_program.c **** 	copy_returnedData[i] = USART1_u8ReceiveByte();
 614              		.loc 1 178 0
 615 00f8 FFF7FEFF 		bl	USART1_u8ReceiveByte
 616              	.LVL101:
 617 00fc 2870     		strb	r0, [r5]
 179:../src/ESP_program.c **** 	while(copy_returnedData[i] != 255)
 618              		.loc 1 179 0
 619 00fe 07E0     		b	.L46
 620              	.LVL102:
 621              	.L48:
 622 0100 2646     		mov	r6, r4
 623              	.LVL103:
 624 0102 2046     		mov	r0, r4
 625              	.LVL104:
 626 0104 F1E7     		b	.L43
 627              	.LVL105:
 628              	.L47:
 180:../src/ESP_program.c **** 	{
 181:../src/ESP_program.c **** 		i++;
 629              		.loc 1 181 0
 630 0106 0134     		adds	r4, r4, #1
 631              	.LVL106:
 632 0108 E4B2     		uxtb	r4, r4
 633              	.LVL107:
 182:../src/ESP_program.c **** 		copy_returnedData[i] = USART1_u8ReceiveByte();
 634              		.loc 1 182 0
 635 010a FFF7FEFF 		bl	USART1_u8ReceiveByte
 636              	.LVL108:
 637 010e 2855     		strb	r0, [r5, r4]
 638              	.LVL109:
 639              	.L46:
 179:../src/ESP_program.c **** 	while(copy_returnedData[i] != 255)
 640              		.loc 1 179 0
 641 0110 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 642 0112 FF2B     		cmp	r3, #255
 643 0114 F7D1     		bne	.L47
 183:../src/ESP_program.c **** 	}
 184:../src/ESP_program.c **** 
 185:../src/ESP_program.c **** }
 644              		.loc 1 185 0
 645 0116 1AB0     		add	sp, sp, #104
 646              		.cfi_def_cfa_offset 16
 647              		@ sp needed
 648 0118 70BD     		pop	{r4, r5, r6, pc}
 649              	.LVL110:
 650              	.L51:
 651 011a 00BF     		.align	2
 652              	.L50:
 653 011c 64000000 		.word	.LANCHOR0+100
 654 0120 00000000 		.word	.LC4
 655 0124 10000000 		.word	.LC5
 656              		.cfi_endproc
 657              	.LFE3:
 659              		.section	.rodata
 660              		.align	2
 661              		.set	.LANCHOR0,. + 0
 662              	.LC2:
 663 0000 41542B43 		.ascii	"AT+CWJAP_CUR=\000"
 663      574A4150 
 663      5F435552 
 663      3D00
 664 000e 00000000 		.space	86
 664      00000000 
 664      00000000 
 664      00000000 
 664      00000000 
 665              	.LC3:
 666 0064 41542B43 		.ascii	"AT+CIPSTART=\000"
 666      49505354 
 666      4152543D 
 666      00
 667 0071 00000000 		.space	87
 667      00000000 
 667      00000000 
 667      00000000 
 667      00000000 
 668              		.section	.rodata.ESP_voidConnectToServer.str1.4,"aMS",%progbits,1
 669              		.align	2
 670              	.LC4:
 671 0000 41542B43 		.ascii	"AT+CIPSEND=39\015\012\000"
 671      49505345 
 671      4E443D33 
 671      390D0A00 
 672              	.LC5:
 673 0010 47455420 		.ascii	"GET http://iot.freeoda.com/status.txt\015\012\000"
 673      68747470 
 673      3A2F2F69 
 673      6F742E66 
 673      7265656F 
 674              		.section	.rodata.ESP_voidInit.str1.4,"aMS",%progbits,1
 675              		.align	2
 676              	.LC0:
 677 0000 41544530 		.ascii	"ATE0\015\012\000"
 677      0D0A00
 678 0007 00       		.space	1
 679              	.LC1:
 680 0008 41542B43 		.ascii	"AT+CWMODE=1\015\012\000"
 680      574D4F44 
 680      453D310D 
 680      0A00
 681              		.text
 682              	.Letext0:
 683              		.file 2 "../include/USART_interface.h"
 684              		.file 3 "../include/STK_interface.h"
 685              		.file 4 "../include/STD_TYPES.h"
 686              		.file 5 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 ESP_program.c
C:\Users\george\AppData\Local\Temp\cciZuado.s:16     .text.ESP_u8CheckResponse:00000000 $t
C:\Users\george\AppData\Local\Temp\cciZuado.s:22     .text.ESP_u8CheckResponse:00000000 ESP_u8CheckResponse
C:\Users\george\AppData\Local\Temp\cciZuado.s:142    .text.ESP_voidInit:00000000 $t
C:\Users\george\AppData\Local\Temp\cciZuado.s:149    .text.ESP_voidInit:00000000 ESP_voidInit
C:\Users\george\AppData\Local\Temp\cciZuado.s:227    .text.ESP_voidInit:00000044 $d
C:\Users\george\AppData\Local\Temp\cciZuado.s:233    .text.ESP_voidConnectToWIFI:00000000 $t
C:\Users\george\AppData\Local\Temp\cciZuado.s:240    .text.ESP_voidConnectToWIFI:00000000 ESP_voidConnectToWIFI
C:\Users\george\AppData\Local\Temp\cciZuado.s:401    .text.ESP_voidConnectToWIFI:000000c8 $d
C:\Users\george\AppData\Local\Temp\cciZuado.s:407    .text.ESP_voidConnectToServer:00000000 $t
C:\Users\george\AppData\Local\Temp\cciZuado.s:414    .text.ESP_voidConnectToServer:00000000 ESP_voidConnectToServer
C:\Users\george\AppData\Local\Temp\cciZuado.s:653    .text.ESP_voidConnectToServer:0000011c $d
C:\Users\george\AppData\Local\Temp\cciZuado.s:660    .rodata:00000000 $d
C:\Users\george\AppData\Local\Temp\cciZuado.s:669    .rodata.ESP_voidConnectToServer.str1.4:00000000 $d
C:\Users\george\AppData\Local\Temp\cciZuado.s:675    .rodata.ESP_voidInit.str1.4:00000000 $d
                           .group:00000000 wm4.0.c450a18b2a29049e2cbb4137d58ca9b1
                           .group:00000000 wm4.BIT_MATH.h.7.8c067faa1c2a78484709e69a816ceacc

UNDEFINED SYMBOLS
memset
USART1_u8ReceiveByte
USART1_voidSendString
STK_voidSetBusyWait
