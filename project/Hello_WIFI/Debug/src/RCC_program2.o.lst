   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"RCC_program2.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RCC_voidInitSysClock,"ax",%progbits
  16              		.align	1
  17              		.global	RCC_voidInitSysClock
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	RCC_voidInitSysClock:
  24              	.LFB0:
  25              		.file 1 "../src/RCC_program2.c"
   1:../src/RCC_program2.c **** /****************************************************************************/
   2:../src/RCC_program2.c **** /* Author   :George Ghoubrial                                               */
   3:../src/RCC_program2.c **** /* Version  :V02                                                            */
   4:../src/RCC_program2.c **** /* Date     :1 NOV 2020                                                     */
   5:../src/RCC_program2.c **** /****************************************************************************/
   6:../src/RCC_program2.c **** 
   7:../src/RCC_program2.c **** #include"STD_TYPES.h"
   8:../src/RCC_program2.c **** #include"BIT_MATH.h"
   9:../src/RCC_program2.c **** 
  10:../src/RCC_program2.c **** #include"RCC_interface.h"
  11:../src/RCC_program2.c **** #include"RCC_private.h"
  12:../src/RCC_program2.c **** #include"RCC_config.h"
  13:../src/RCC_program2.c **** 
  14:../src/RCC_program2.c **** void RCC_voidInitSysClock(void)
  15:../src/RCC_program2.c **** {
  26              		.loc 1 15 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  16:../src/RCC_program2.c **** #if     RCC_CLOCK_TYPE == RCC_HSE_CRYSTAL
  17:../src/RCC_program2.c **** 	RCC_CFGR = 0x00000001;
  31              		.loc 1 17 0
  32 0000 034B     		ldr	r3, .L2
  33 0002 0122     		movs	r2, #1
  34 0004 1A60     		str	r2, [r3]
  18:../src/RCC_program2.c **** 	RCC_CR   = 0x00010000; /* Enable HSE Without Bypass*/
  35              		.loc 1 18 0
  36 0006 043B     		subs	r3, r3, #4
  37 0008 4FF48032 		mov	r2, #65536
  38 000c 1A60     		str	r2, [r3]
  19:../src/RCC_program2.c **** #elif   RCC_CLOCK_TYPE == RCC_HSE_RC
  20:../src/RCC_program2.c **** 	RCC_CFGR = 0x00000001;
  21:../src/RCC_program2.c **** 	RCC_CR   = 0x00050000; /* Enable HSE With Bypass */
  22:../src/RCC_program2.c **** #elif   RCC_CLOCK_TYPE == RCC_HSI
  23:../src/RCC_program2.c **** 	RCC_CFGR = 0x00000000;
  24:../src/RCC_program2.c **** 	RCC_CR   = 0x00000081; /* Enable HSI + Triming = 0 */
  25:../src/RCC_program2.c **** #elif   RCC_CLOCK_TYPE == RCC_PLL
  26:../src/RCC_program2.c **** 
  27:../src/RCC_program2.c ****      #if RCC_PLL_INPUT == RCC_PLL_IN_HSI_DIV_2
  28:../src/RCC_program2.c **** 	     RCC_CFGR = 0x00000010; /* select PLL as clock system & select HSI/2 as PLL input */
  29:../src/RCC_program2.c **** 		 RCC_CFGR = (RCC_CFGR & 0xFFC3FFFF) | (RCC_PLL_MUL_VAL << 18); /* clear the 4 bits of PLLMUL then
  30:../src/RCC_program2.c **** 	     RCC_CR   = 0x01000000; /* Enable PLL */
  31:../src/RCC_program2.c **** 
  32:../src/RCC_program2.c **** 	#elif RCC_PLL_INPUT == RCC_PLL_IN_HSE_DIV_2
  33:../src/RCC_program2.c **** 	     RCC_CFGR = 0x00030010; /* select PLL as clock system & select HSE/2 as PLL input */
  34:../src/RCC_program2.c **** 		 RCC_CFGR = (RCC_CFGR & 0xFFC3FFFF) | (RCC_PLL_MUL_VAL << 18); /* clear the 4 bits of PLLMUL then
  35:../src/RCC_program2.c **** 	     RCC_CR   = 0x01000000; /* Enable PLL */
  36:../src/RCC_program2.c **** 
  37:../src/RCC_program2.c **** 	#elif RCC_PLL_INPUT == RCC_PLL_IN_HSE
  38:../src/RCC_program2.c **** 	     RCC_CFGR = 0x00010010; /* select PLL as clock system & select HSE as PLL input */
  39:../src/RCC_program2.c **** 		 RCC_CFGR = (RCC_CFGR & 0xFFC3FFFF) | (RCC_PLL_MUL_VAL << 18); /* clear the 4 bits of PLLMUL then
  40:../src/RCC_program2.c **** 	     RCC_CR   = 0x01000000; /* Enable PLL */
  41:../src/RCC_program2.c **** 	#else
  42:../src/RCC_program2.c **** 		#error("You chose wrong PLL input")
  43:../src/RCC_program2.c **** 	#endif
  44:../src/RCC_program2.c **** #else
  45:../src/RCC_program2.c **** 	#error("you chose wrong clock type")
  46:../src/RCC_program2.c **** 
  47:../src/RCC_program2.c **** #endif
  48:../src/RCC_program2.c **** }
  39              		.loc 1 48 0
  40 000e 7047     		bx	lr
  41              	.L3:
  42              		.align	2
  43              	.L2:
  44 0010 04100240 		.word	1073876996
  45              		.cfi_endproc
  46              	.LFE0:
  48              		.section	.text.RCC_voidEnableClock,"ax",%progbits
  49              		.align	1
  50              		.global	RCC_voidEnableClock
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu softvfp
  56              	RCC_voidEnableClock:
  57              	.LFB1:
  49:../src/RCC_program2.c **** 
  50:../src/RCC_program2.c **** void RCC_voidEnableClock(u8 Copy_u8BusId,u8 Copy_u8PreId)
  51:../src/RCC_program2.c **** {
  58              		.loc 1 51 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63              	.LVL0:
  52:../src/RCC_program2.c **** 	if(Copy_u8PreId<=31)
  64              		.loc 1 52 0
  65 0000 1F29     		cmp	r1, #31
  66 0002 1CD8     		bhi	.L4
  53:../src/RCC_program2.c **** 	{
  54:../src/RCC_program2.c **** 		switch(Copy_u8BusId)
  67              		.loc 1 54 0
  68 0004 0128     		cmp	r0, #1
  69 0006 0BD0     		beq	.L6
  70 0008 10B1     		cbz	r0, .L7
  71 000a 0228     		cmp	r0, #2
  72 000c 10D0     		beq	.L8
  73 000e 7047     		bx	lr
  74              	.L7:
  55:../src/RCC_program2.c **** 		{
  56:../src/RCC_program2.c **** 		case RCC_AHB:
  57:../src/RCC_program2.c **** 			SET_BIT(RCC_AHBENR,Copy_u8PreId);
  75              		.loc 1 57 0
  76 0010 0B48     		ldr	r0, .L9
  77              	.LVL1:
  78 0012 0368     		ldr	r3, [r0]
  79 0014 0122     		movs	r2, #1
  80 0016 02FA01F1 		lsl	r1, r2, r1
  81              	.LVL2:
  82 001a 0B43     		orrs	r3, r3, r1
  83 001c 0360     		str	r3, [r0]
  58:../src/RCC_program2.c **** 			break;
  84              		.loc 1 58 0
  85 001e 7047     		bx	lr
  86              	.LVL3:
  87              	.L6:
  59:../src/RCC_program2.c **** 		case RCC_APB1:
  60:../src/RCC_program2.c **** 			SET_BIT(RCC_APB1ENR,Copy_u8PreId);
  88              		.loc 1 60 0
  89 0020 0848     		ldr	r0, .L9+4
  90              	.LVL4:
  91 0022 0368     		ldr	r3, [r0]
  92 0024 0122     		movs	r2, #1
  93 0026 02FA01F1 		lsl	r1, r2, r1
  94              	.LVL5:
  95 002a 0B43     		orrs	r3, r3, r1
  96 002c 0360     		str	r3, [r0]
  61:../src/RCC_program2.c **** 			break;
  97              		.loc 1 61 0
  98 002e 7047     		bx	lr
  99              	.LVL6:
 100              	.L8:
  62:../src/RCC_program2.c **** 		case RCC_APB2:
  63:../src/RCC_program2.c **** 			SET_BIT(RCC_APB2ENR,Copy_u8PreId);
 101              		.loc 1 63 0
 102 0030 0548     		ldr	r0, .L9+8
 103              	.LVL7:
 104 0032 0368     		ldr	r3, [r0]
 105 0034 0122     		movs	r2, #1
 106 0036 02FA01F1 		lsl	r1, r2, r1
 107              	.LVL8:
 108 003a 0B43     		orrs	r3, r3, r1
 109 003c 0360     		str	r3, [r0]
 110              	.L4:
  64:../src/RCC_program2.c **** 			break;
  65:../src/RCC_program2.c **** 			//default:/*return error*/
  66:../src/RCC_program2.c **** 		}
  67:../src/RCC_program2.c **** 	}
  68:../src/RCC_program2.c **** 	else
  69:../src/RCC_program2.c **** 	{
  70:../src/RCC_program2.c **** 		/*return error*/
  71:../src/RCC_program2.c **** 	}
  72:../src/RCC_program2.c **** 
  73:../src/RCC_program2.c **** }
 111              		.loc 1 73 0
 112 003e 7047     		bx	lr
 113              	.L10:
 114              		.align	2
 115              	.L9:
 116 0040 14100240 		.word	1073877012
 117 0044 1C100240 		.word	1073877020
 118 0048 18100240 		.word	1073877016
 119              		.cfi_endproc
 120              	.LFE1:
 122              		.section	.text.RCC_voidDisableClock,"ax",%progbits
 123              		.align	1
 124              		.global	RCC_voidDisableClock
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu softvfp
 130              	RCC_voidDisableClock:
 131              	.LFB2:
  74:../src/RCC_program2.c **** 
  75:../src/RCC_program2.c **** 
  76:../src/RCC_program2.c **** void RCC_voidDisableClock(u8 Copy_u8BusId,u8 Copy_u8PreId)
  77:../src/RCC_program2.c **** {
 132              		.loc 1 77 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137              	.LVL9:
  78:../src/RCC_program2.c **** 	if(Copy_u8PreId<=31)
 138              		.loc 1 78 0
 139 0000 1F29     		cmp	r1, #31
 140 0002 1FD8     		bhi	.L11
  79:../src/RCC_program2.c **** 	{
  80:../src/RCC_program2.c **** 		switch(Copy_u8BusId)
 141              		.loc 1 80 0
 142 0004 0128     		cmp	r0, #1
 143 0006 0CD0     		beq	.L13
 144 0008 10B1     		cbz	r0, .L14
 145 000a 0228     		cmp	r0, #2
 146 000c 12D0     		beq	.L15
 147 000e 7047     		bx	lr
 148              	.L14:
  81:../src/RCC_program2.c **** 		{
  82:../src/RCC_program2.c **** 		case RCC_AHB:
  83:../src/RCC_program2.c **** 			CLEAR_BIT(RCC_AHBENR,Copy_u8PreId);
 149              		.loc 1 83 0
 150 0010 0D48     		ldr	r0, .L16
 151              	.LVL10:
 152 0012 0368     		ldr	r3, [r0]
 153 0014 0122     		movs	r2, #1
 154 0016 02FA01F1 		lsl	r1, r2, r1
 155              	.LVL11:
 156 001a 23EA0103 		bic	r3, r3, r1
 157 001e 0360     		str	r3, [r0]
  84:../src/RCC_program2.c **** 			break;
 158              		.loc 1 84 0
 159 0020 7047     		bx	lr
 160              	.LVL12:
 161              	.L13:
  85:../src/RCC_program2.c **** 		case RCC_APB1:
  86:../src/RCC_program2.c **** 			CLEAR_BIT(RCC_APB1ENR,Copy_u8PreId);
 162              		.loc 1 86 0
 163 0022 0A48     		ldr	r0, .L16+4
 164              	.LVL13:
 165 0024 0368     		ldr	r3, [r0]
 166 0026 0122     		movs	r2, #1
 167 0028 02FA01F1 		lsl	r1, r2, r1
 168              	.LVL14:
 169 002c 23EA0103 		bic	r3, r3, r1
 170 0030 0360     		str	r3, [r0]
  87:../src/RCC_program2.c **** 			break;
 171              		.loc 1 87 0
 172 0032 7047     		bx	lr
 173              	.LVL15:
 174              	.L15:
  88:../src/RCC_program2.c **** 		case RCC_APB2:
  89:../src/RCC_program2.c **** 			CLEAR_BIT(RCC_APB2ENR,Copy_u8PreId);
 175              		.loc 1 89 0
 176 0034 0648     		ldr	r0, .L16+8
 177              	.LVL16:
 178 0036 0368     		ldr	r3, [r0]
 179 0038 0122     		movs	r2, #1
 180 003a 02FA01F1 		lsl	r1, r2, r1
 181              	.LVL17:
 182 003e 23EA0103 		bic	r3, r3, r1
 183 0042 0360     		str	r3, [r0]
 184              	.L11:
  90:../src/RCC_program2.c **** 			break;
  91:../src/RCC_program2.c **** 			//default:/*return error*/
  92:../src/RCC_program2.c **** 		}
  93:../src/RCC_program2.c **** 	}
  94:../src/RCC_program2.c **** 	else
  95:../src/RCC_program2.c **** 	{
  96:../src/RCC_program2.c **** 		/*return error*/
  97:../src/RCC_program2.c **** 	}
  98:../src/RCC_program2.c **** }
 185              		.loc 1 98 0
 186 0044 7047     		bx	lr
 187              	.L17:
 188 0046 00BF     		.align	2
 189              	.L16:
 190 0048 14100240 		.word	1073877012
 191 004c 1C100240 		.word	1073877020
 192 0050 18100240 		.word	1073877016
 193              		.cfi_endproc
 194              	.LFE2:
 196              		.text
 197              	.Letext0:
 198              		.file 2 "../include/STD_TYPES.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RCC_program2.c
C:\Users\george\AppData\Local\Temp\ccV7HSj1.s:16     .text.RCC_voidInitSysClock:00000000 $t
C:\Users\george\AppData\Local\Temp\ccV7HSj1.s:23     .text.RCC_voidInitSysClock:00000000 RCC_voidInitSysClock
C:\Users\george\AppData\Local\Temp\ccV7HSj1.s:44     .text.RCC_voidInitSysClock:00000010 $d
C:\Users\george\AppData\Local\Temp\ccV7HSj1.s:49     .text.RCC_voidEnableClock:00000000 $t
C:\Users\george\AppData\Local\Temp\ccV7HSj1.s:56     .text.RCC_voidEnableClock:00000000 RCC_voidEnableClock
C:\Users\george\AppData\Local\Temp\ccV7HSj1.s:116    .text.RCC_voidEnableClock:00000040 $d
C:\Users\george\AppData\Local\Temp\ccV7HSj1.s:123    .text.RCC_voidDisableClock:00000000 $t
C:\Users\george\AppData\Local\Temp\ccV7HSj1.s:130    .text.RCC_voidDisableClock:00000000 RCC_voidDisableClock
C:\Users\george\AppData\Local\Temp\ccV7HSj1.s:190    .text.RCC_voidDisableClock:00000048 $d
                           .group:00000000 wm4.0.c450a18b2a29049e2cbb4137d58ca9b1
                           .group:00000000 wm4.BIT_MATH.h.7.8c067faa1c2a78484709e69a816ceacc
                           .group:00000000 wm4.RCC_interface.h.7.04eb592d8fdb87e43a28c1c0a5b43a30
                           .group:00000000 wm4.RCC_private.h.8.042031162ca9d67aa91234fe8026707b
                           .group:00000000 wm4.RCC_config.h.7.fcb20a41d0c5ddfb259374d9d0cf5e95

NO UNDEFINED SYMBOLS
